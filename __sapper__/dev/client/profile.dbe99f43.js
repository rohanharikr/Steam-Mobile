import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, e as element, a as space, t as text, c as claim_element, b as children, f as detach_dev, g as claim_space, h as claim_text, j as attr_dev, l as add_location, k as set_style, m as insert_dev, n as append_dev, o as set_data_dev, p as noop, K as group_outros, y as transition_out, L as check_outros, x as transition_in, q as create_component, u as claim_component, w as mount_component, z as destroy_component, F as listen_dev, r as query_selector_all } from './client.818149de.js';
import { N as Navbar, T as Tabbar } from './Tabbar.a63a21dc.js';
import { u as username } from './stores.8c261574.js';

/* src/components/ProfileHeader.svelte generated by Svelte v3.22.2 */

const file = "src/components/ProfileHeader.svelte";

function create_fragment(ctx) {
	let main;
	let div8;
	let div0;
	let t0;
	let div5;
	let div4;
	let div1;
	let t1;
	let div2;
	let h3;
	let t2;
	let t3;
	let h5;
	let t4;
	let t5;
	let div3;
	let t6;
	let t7;
	let div6;
	let t8;
	let div7;

	const block = {
		c: function create() {
			main = element("main");
			div8 = element("div");
			div0 = element("div");
			t0 = space();
			div5 = element("div");
			div4 = element("div");
			div1 = element("div");
			t1 = space();
			div2 = element("div");
			h3 = element("h3");
			t2 = text(/*alias*/ ctx[0]);
			t3 = space();
			h5 = element("h5");
			t4 = text(/*name*/ ctx[1]);
			t5 = space();
			div3 = element("div");
			t6 = text(/*level*/ ctx[3]);
			t7 = space();
			div6 = element("div");
			t8 = space();
			div7 = element("div");
			this.h();
		},
		l: function claim(nodes) {
			main = claim_element(nodes, "MAIN", {});
			var main_nodes = children(main);
			div8 = claim_element(main_nodes, "DIV", { id: true, class: true });
			var div8_nodes = children(div8);
			div0 = claim_element(div8_nodes, "DIV", { id: true, class: true });
			children(div0).forEach(detach_dev);
			t0 = claim_space(div8_nodes);
			div5 = claim_element(div8_nodes, "DIV", { id: true, class: true });
			var div5_nodes = children(div5);
			div4 = claim_element(div5_nodes, "DIV", { id: true, class: true });
			var div4_nodes = children(div4);
			div1 = claim_element(div4_nodes, "DIV", { id: true, style: true, class: true });
			children(div1).forEach(detach_dev);
			t1 = claim_space(div4_nodes);
			div2 = claim_element(div4_nodes, "DIV", { id: true, class: true });
			var div2_nodes = children(div2);
			h3 = claim_element(div2_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t2 = claim_text(h3_nodes, /*alias*/ ctx[0]);
			h3_nodes.forEach(detach_dev);
			t3 = claim_space(div2_nodes);
			h5 = claim_element(div2_nodes, "H5", { class: true });
			var h5_nodes = children(h5);
			t4 = claim_text(h5_nodes, /*name*/ ctx[1]);
			h5_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			t5 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { id: true, class: true });
			var div3_nodes = children(div3);
			t6 = claim_text(div3_nodes, /*level*/ ctx[3]);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t7 = claim_space(div8_nodes);
			div6 = claim_element(div8_nodes, "DIV", { id: true, style: true, class: true });
			children(div6).forEach(detach_dev);
			t8 = claim_space(div8_nodes);
			div7 = claim_element(div8_nodes, "DIV", { id: true, class: true });
			children(div7).forEach(detach_dev);
			div8_nodes.forEach(detach_dev);
			main_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "id", "layer1");
			attr_dev(div0, "class", "svelte-bla0wa");
			add_location(div0, file, 6, 4, 97);
			attr_dev(div1, "id", "profilepicture");
			set_style(div1, "background-image", "url(" + /*profilePicture*/ ctx[2] + ")");
			attr_dev(div1, "class", "svelte-bla0wa");
			add_location(div1, file, 9, 8, 180);
			attr_dev(h3, "class", "svelte-bla0wa");
			add_location(h3, file, 13, 10, 315);
			attr_dev(h5, "class", "svelte-bla0wa");
			add_location(h5, file, 14, 10, 342);
			attr_dev(div2, "id", "userinfo");
			attr_dev(div2, "class", "svelte-bla0wa");
			add_location(div2, file, 12, 8, 285);
			attr_dev(div3, "id", "level");
			attr_dev(div3, "class", "svelte-bla0wa");
			add_location(div3, file, 17, 8, 443);
			attr_dev(div4, "id", "content");
			attr_dev(div4, "class", "svelte-bla0wa");
			add_location(div4, file, 8, 6, 153);
			attr_dev(div5, "id", "contentwrapper");
			attr_dev(div5, "class", "svelte-bla0wa");
			add_location(div5, file, 7, 4, 121);
			attr_dev(div6, "id", "layer2");
			set_style(div6, "background-image", "url(gta.jpg)");
			attr_dev(div6, "class", "svelte-bla0wa");
			add_location(div6, file, 21, 4, 563);
			attr_dev(div7, "id", "layer3");
			attr_dev(div7, "class", "svelte-bla0wa");
			add_location(div7, file, 22, 4, 627);
			attr_dev(div8, "id", "head");
			attr_dev(div8, "class", "svelte-bla0wa");
			add_location(div8, file, 5, 2, 77);
			add_location(main, file, 4, 0, 68);
		},
		m: function mount(target, anchor) {
			insert_dev(target, main, anchor);
			append_dev(main, div8);
			append_dev(div8, div0);
			append_dev(div8, t0);
			append_dev(div8, div5);
			append_dev(div5, div4);
			append_dev(div4, div1);
			append_dev(div4, t1);
			append_dev(div4, div2);
			append_dev(div2, h3);
			append_dev(h3, t2);
			append_dev(div2, t3);
			append_dev(div2, h5);
			append_dev(h5, t4);
			append_dev(div4, t5);
			append_dev(div4, div3);
			append_dev(div3, t6);
			append_dev(div8, t7);
			append_dev(div8, div6);
			append_dev(div8, t8);
			append_dev(div8, div7);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*profilePicture*/ 4) {
				set_style(div1, "background-image", "url(" + /*profilePicture*/ ctx[2] + ")");
			}

			if (dirty & /*alias*/ 1) set_data_dev(t2, /*alias*/ ctx[0]);
			if (dirty & /*name*/ 2) set_data_dev(t4, /*name*/ ctx[1]);
			if (dirty & /*level*/ 8) set_data_dev(t6, /*level*/ ctx[3]);
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(main);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { alias } = $$props,
		{ name } = $$props,
		{ profilePicture } = $$props,
		{ level } = $$props;

	const writable_props = ["alias", "name", "profilePicture", "level"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<ProfileHeader> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("ProfileHeader", $$slots, []);

	$$self.$set = $$props => {
		if ("alias" in $$props) $$invalidate(0, alias = $$props.alias);
		if ("name" in $$props) $$invalidate(1, name = $$props.name);
		if ("profilePicture" in $$props) $$invalidate(2, profilePicture = $$props.profilePicture);
		if ("level" in $$props) $$invalidate(3, level = $$props.level);
	};

	$$self.$capture_state = () => ({ alias, name, profilePicture, level });

	$$self.$inject_state = $$props => {
		if ("alias" in $$props) $$invalidate(0, alias = $$props.alias);
		if ("name" in $$props) $$invalidate(1, name = $$props.name);
		if ("profilePicture" in $$props) $$invalidate(2, profilePicture = $$props.profilePicture);
		if ("level" in $$props) $$invalidate(3, level = $$props.level);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [alias, name, profilePicture, level];
}

class ProfileHeader extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance, create_fragment, safe_not_equal, {
			alias: 0,
			name: 1,
			profilePicture: 2,
			level: 3
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "ProfileHeader",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*alias*/ ctx[0] === undefined && !("alias" in props)) {
			console.warn("<ProfileHeader> was created without expected prop 'alias'");
		}

		if (/*name*/ ctx[1] === undefined && !("name" in props)) {
			console.warn("<ProfileHeader> was created without expected prop 'name'");
		}

		if (/*profilePicture*/ ctx[2] === undefined && !("profilePicture" in props)) {
			console.warn("<ProfileHeader> was created without expected prop 'profilePicture'");
		}

		if (/*level*/ ctx[3] === undefined && !("level" in props)) {
			console.warn("<ProfileHeader> was created without expected prop 'level'");
		}
	}

	get alias() {
		throw new Error("<ProfileHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set alias(value) {
		throw new Error("<ProfileHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get name() {
		throw new Error("<ProfileHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set name(value) {
		throw new Error("<ProfileHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get profilePicture() {
		throw new Error("<ProfileHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set profilePicture(value) {
		throw new Error("<ProfileHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get level() {
		throw new Error("<ProfileHeader>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set level(value) {
		throw new Error("<ProfileHeader>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/AboutMeTile.svelte generated by Svelte v3.22.2 */

const file$1 = "src/components/AboutMeTile.svelte";

function create_fragment$1(ctx) {
	let div;
	let h3;
	let t0;
	let t1;

	const block = {
		c: function create() {
			div = element("div");
			h3 = element("h3");
			t0 = text("About");
			t1 = text("\n  Hidetaka Miyazaki is god. Change my mind. Dank Souls has the best lore in any\n  videogame. Waiting for Elden Ring...");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { id: true, class: true });
			var div_nodes = children(div);
			h3 = claim_element(div_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t0 = claim_text(h3_nodes, "About");
			h3_nodes.forEach(detach_dev);
			t1 = claim_text(div_nodes, "\n  Hidetaka Miyazaki is god. Change my mind. Dank Souls has the best lore in any\n  videogame. Waiting for Elden Ring...");
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h3, "class", "svelte-1fo10hi");
			add_location(h3, file$1, 1, 2, 21);
			attr_dev(div, "id", "aboutme");
			attr_dev(div, "class", "svelte-1fo10hi");
			add_location(div, file$1, 0, 0, 0);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, h3);
			append_dev(h3, t0);
			append_dev(div, t1);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<AboutMeTile> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("AboutMeTile", $$slots, []);
	return [];
}

class AboutMeTile extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "AboutMeTile",
			options,
			id: create_fragment$1.name
		});
	}
}

/* src/components/MainBadge.svelte generated by Svelte v3.22.2 */

const file$2 = "src/components/MainBadge.svelte";

function create_fragment$2(ctx) {
	let div1;
	let img;
	let img_src_value;
	let t0;
	let div0;
	let h2;
	let t1;
	let t2;
	let h4;
	let t3;

	const block = {
		c: function create() {
			div1 = element("div");
			img = element("img");
			t0 = space();
			div0 = element("div");
			h2 = element("h2");
			t1 = text("Years of Service");
			t2 = space();
			h4 = element("h4");
			t3 = text("250 XP");
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { id: true, class: true });
			var div1_nodes = children(div1);
			img = claim_element(div1_nodes, "IMG", { src: true });
			t0 = claim_space(div1_nodes);
			div0 = claim_element(div1_nodes, "DIV", { id: true, class: true });
			var div0_nodes = children(div0);
			h2 = claim_element(div0_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t1 = claim_text(h2_nodes, "Years of Service");
			h2_nodes.forEach(detach_dev);
			t2 = claim_space(div0_nodes);
			h4 = claim_element(div0_nodes, "H4", { class: true });
			var h4_nodes = children(h4);
			t3 = claim_text(h4_nodes, "250 XP");
			h4_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = "https://steamcommunity-a.akamaihd.net/public/images/badges/02_years/steamyears5_54.png")) attr_dev(img, "src", img_src_value);
			add_location(img, file$2, 1, 2, 23);
			attr_dev(h2, "class", "svelte-m45iuk");
			add_location(h2, file$2, 4, 4, 159);
			attr_dev(h4, "class", "svelte-m45iuk");
			add_location(h4, file$2, 5, 4, 189);
			attr_dev(div0, "id", "badgemaininfo");
			attr_dev(div0, "class", "svelte-m45iuk");
			add_location(div0, file$2, 3, 2, 130);
			attr_dev(div1, "id", "badgemain");
			attr_dev(div1, "class", "svelte-m45iuk");
			add_location(div1, file$2, 0, 0, 0);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, img);
			append_dev(div1, t0);
			append_dev(div1, div0);
			append_dev(div0, h2);
			append_dev(h2, t1);
			append_dev(div0, t2);
			append_dev(div0, h4);
			append_dev(h4, t3);
		},
		p: noop,
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<MainBadge> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("MainBadge", $$slots, []);
	return [];
}

class MainBadge extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "MainBadge",
			options,
			id: create_fragment$2.name
		});
	}
}

/* src/components/Showcase.svelte generated by Svelte v3.22.2 */

const file$3 = "src/components/Showcase.svelte";

function create_fragment$3(ctx) {
	let div;
	let img0;
	let img0_src_value;
	let t0;
	let img1;
	let img1_src_value;
	let t1;
	let img2;
	let img2_src_value;
	let t2;
	let img3;
	let img3_src_value;
	let t3;
	let img4;
	let img4_src_value;

	const block = {
		c: function create() {
			div = element("div");
			img0 = element("img");
			t0 = space();
			img1 = element("img");
			t1 = space();
			img2 = element("img");
			t2 = space();
			img3 = element("img");
			t3 = space();
			img4 = element("img");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { id: true, class: true });
			var div_nodes = children(div);
			img0 = claim_element(div_nodes, "IMG", { src: true, style: true, class: true });
			t0 = claim_space(div_nodes);
			img1 = claim_element(div_nodes, "IMG", { src: true, style: true, class: true });
			t1 = claim_space(div_nodes);
			img2 = claim_element(div_nodes, "IMG", { src: true, style: true, class: true });
			t2 = claim_space(div_nodes);
			img3 = claim_element(div_nodes, "IMG", { src: true, style: true, class: true });
			t3 = claim_space(div_nodes);
			img4 = claim_element(div_nodes, "IMG", { src: true, style: true, class: true });
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img0.src !== (img0_src_value = /*images*/ ctx[0][0].link)) attr_dev(img0, "src", img0_src_value);
			set_style(img0, "height", /*images*/ ctx[0][0].height);
			set_style(img0, "border-radius", /*images*/ ctx[0][0].borderRadius);
			attr_dev(img0, "class", "svelte-mjq71y");
			add_location(img0, file$3, 5, 2, 89);
			if (img1.src !== (img1_src_value = /*images*/ ctx[0][1].link)) attr_dev(img1, "src", img1_src_value);
			set_style(img1, "height", /*images*/ ctx[0][1].height);
			set_style(img1, "border-radius", /*images*/ ctx[0][0].borderRadius);
			attr_dev(img1, "class", "svelte-mjq71y");
			add_location(img1, file$3, 8, 2, 204);
			if (img2.src !== (img2_src_value = /*images*/ ctx[0][2].link)) attr_dev(img2, "src", img2_src_value);
			set_style(img2, "height", /*images*/ ctx[0][2].height);
			set_style(img2, "border-radius", /*images*/ ctx[0][0].borderRadius);
			attr_dev(img2, "class", "svelte-mjq71y");
			add_location(img2, file$3, 11, 2, 319);
			if (img3.src !== (img3_src_value = /*images*/ ctx[0][3].link)) attr_dev(img3, "src", img3_src_value);
			set_style(img3, "height", /*images*/ ctx[0][3].height);
			set_style(img3, "border-radius", /*images*/ ctx[0][0].borderRadius);
			attr_dev(img3, "class", "svelte-mjq71y");
			add_location(img3, file$3, 14, 2, 434);
			if (img4.src !== (img4_src_value = /*images*/ ctx[0][4].link)) attr_dev(img4, "src", img4_src_value);
			set_style(img4, "height", /*images*/ ctx[0][4].height);
			set_style(img4, "border-radius", /*images*/ ctx[0][0].borderRadius);
			attr_dev(img4, "class", "svelte-mjq71y");
			add_location(img4, file$3, 17, 2, 549);
			attr_dev(div, "id", "badgeshowcase");
			attr_dev(div, "class", "svelte-mjq71y");
			add_location(div, file$3, 4, 0, 62);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div, anchor);
			append_dev(div, img0);
			append_dev(div, t0);
			append_dev(div, img1);
			append_dev(div, t1);
			append_dev(div, img2);
			append_dev(div, t2);
			append_dev(div, img3);
			append_dev(div, t3);
			append_dev(div, img4);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*images*/ 1 && img0.src !== (img0_src_value = /*images*/ ctx[0][0].link)) {
				attr_dev(img0, "src", img0_src_value);
			}

			if (dirty & /*images*/ 1) {
				set_style(img0, "height", /*images*/ ctx[0][0].height);
			}

			if (dirty & /*images*/ 1) {
				set_style(img0, "border-radius", /*images*/ ctx[0][0].borderRadius);
			}

			if (dirty & /*images*/ 1 && img1.src !== (img1_src_value = /*images*/ ctx[0][1].link)) {
				attr_dev(img1, "src", img1_src_value);
			}

			if (dirty & /*images*/ 1) {
				set_style(img1, "height", /*images*/ ctx[0][1].height);
			}

			if (dirty & /*images*/ 1) {
				set_style(img1, "border-radius", /*images*/ ctx[0][0].borderRadius);
			}

			if (dirty & /*images*/ 1 && img2.src !== (img2_src_value = /*images*/ ctx[0][2].link)) {
				attr_dev(img2, "src", img2_src_value);
			}

			if (dirty & /*images*/ 1) {
				set_style(img2, "height", /*images*/ ctx[0][2].height);
			}

			if (dirty & /*images*/ 1) {
				set_style(img2, "border-radius", /*images*/ ctx[0][0].borderRadius);
			}

			if (dirty & /*images*/ 1 && img3.src !== (img3_src_value = /*images*/ ctx[0][3].link)) {
				attr_dev(img3, "src", img3_src_value);
			}

			if (dirty & /*images*/ 1) {
				set_style(img3, "height", /*images*/ ctx[0][3].height);
			}

			if (dirty & /*images*/ 1) {
				set_style(img3, "border-radius", /*images*/ ctx[0][0].borderRadius);
			}

			if (dirty & /*images*/ 1 && img4.src !== (img4_src_value = /*images*/ ctx[0][4].link)) {
				attr_dev(img4, "src", img4_src_value);
			}

			if (dirty & /*images*/ 1) {
				set_style(img4, "height", /*images*/ ctx[0][4].height);
			}

			if (dirty & /*images*/ 1) {
				set_style(img4, "border-radius", /*images*/ ctx[0][0].borderRadius);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$3.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$3($$self, $$props, $$invalidate) {
	let { images } = $$props, { height } = $$props, { borderRadius } = $$props;
	const writable_props = ["images", "height", "borderRadius"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Showcase> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Showcase", $$slots, []);

	$$self.$set = $$props => {
		if ("images" in $$props) $$invalidate(0, images = $$props.images);
		if ("height" in $$props) $$invalidate(1, height = $$props.height);
		if ("borderRadius" in $$props) $$invalidate(2, borderRadius = $$props.borderRadius);
	};

	$$self.$capture_state = () => ({ images, height, borderRadius });

	$$self.$inject_state = $$props => {
		if ("images" in $$props) $$invalidate(0, images = $$props.images);
		if ("height" in $$props) $$invalidate(1, height = $$props.height);
		if ("borderRadius" in $$props) $$invalidate(2, borderRadius = $$props.borderRadius);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [images, height, borderRadius];
}

class Showcase extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$3, create_fragment$3, safe_not_equal, { images: 0, height: 1, borderRadius: 2 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Showcase",
			options,
			id: create_fragment$3.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*images*/ ctx[0] === undefined && !("images" in props)) {
			console.warn("<Showcase> was created without expected prop 'images'");
		}

		if (/*height*/ ctx[1] === undefined && !("height" in props)) {
			console.warn("<Showcase> was created without expected prop 'height'");
		}

		if (/*borderRadius*/ ctx[2] === undefined && !("borderRadius" in props)) {
			console.warn("<Showcase> was created without expected prop 'borderRadius'");
		}
	}

	get images() {
		throw new Error("<Showcase>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set images(value) {
		throw new Error("<Showcase>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get height() {
		throw new Error("<Showcase>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set height(value) {
		throw new Error("<Showcase>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get borderRadius() {
		throw new Error("<Showcase>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set borderRadius(value) {
		throw new Error("<Showcase>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/ProfileTile.svelte generated by Svelte v3.22.2 */
const file$4 = "src/components/ProfileTile.svelte";

// (20:30) 
function create_if_block_2(ctx) {
	let current;

	const showcase = new Showcase({
			props: {
				images: [
					{
						link: "https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/e3/e34e65ef2ef16093d4428c930fbcc42490522ed3_full.jpg",
						borderRadius: "2px"
					},
					{
						link: "https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/6f/6f286e56e44d76779da78587f4825dd2a056f21c_full.jpg",
						borderRadius: "2px"
					},
					{
						link: "https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/9b/9b62d03b03693bbffa90947d8435f5238ea86cac_full.jpg",
						borderRadius: "2px"
					},
					{
						link: "https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/9b/9b1f97e41e69a4b62ef6ca882e4a987e48674b83_full.jpg",
						borderRadius: "2px"
					},
					{
						link: "https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/14/1415fb0c2184840713d26e08ef1446e67cff60c1_full.jpg",
						borderRadius: "2px"
					}
				]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(showcase.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(showcase.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(showcase, target, anchor);
			current = true;
		},
		i: function intro(local) {
			if (current) return;
			transition_in(showcase.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(showcase.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(showcase, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(20:30) ",
		ctx
	});

	return block;
}

// (17:31) 
function create_if_block_1(ctx) {
	let current;

	const showcase = new Showcase({
			props: {
				images: [
					{
						link: "https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/54/5428a931843bec66cdcd8a58b20060cc4c581cad_full.jpg",
						borderRadius: "2px"
					},
					{
						link: "https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/8f/8fee180ace401f3bd50d5b96f7d19ab8da65553b_full.jpg",
						borderRadius: "2px"
					},
					{
						link: "https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/b4/b4f03f03f8997cb0de81b6d1c35a5dc3633be69a_full.jpg",
						borderRadius: "2px"
					},
					{
						link: "https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/23/232bf1a8e7db9e853cc508295b9908bf61cda90b_full.jpg",
						borderRadius: "2px"
					},
					{
						link: "https://steamcdn-a.akamaihd.net/steamcommunity/public/images/avatars/53/53edb1365f53a23314beb6c943ddf38104fc50cf_full.jpg",
						borderRadius: "2px"
					}
				]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(showcase.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(showcase.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(showcase, target, anchor);
			current = true;
		},
		i: function intro(local) {
			if (current) return;
			transition_in(showcase.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(showcase.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(showcase, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(17:31) ",
		ctx
	});

	return block;
}

// (13:2) {#if name === 'Badges'}
function create_if_block(ctx) {
	let t;
	let current;
	const mainbadge = new MainBadge({ $$inline: true });

	const showcase = new Showcase({
			props: {
				images: [
					{
						link: "https://steamcommunity-a.akamaihd.net/public/images/badges/37_summer2019/level25_80.png",
						height: "32px"
					},
					{
						link: "https://steamcdn-a.akamaihd.net/steamcommunity/public/images/items/730/54e40b9e2288fbab8bd4c6537b0325d405c7e1b0.png",
						height: "32px"
					},
					{
						link: "https://steamcommunity-a.akamaihd.net/public/images/badges/28_springcleaning2018/bronze_80.png",
						height: "40px"
					},
					{
						link: "https://steamcdn-a.akamaihd.net/steamcommunity/public/images/items/762800/d467ec8eaed4643c47fbed43ed781daef2525963.png",
						height: "36px"
					},
					{
						link: "https://steamcommunity-a.akamaihd.net/public/images/badges/27_steamawardnominations/level04_80.png",
						height: "38px"
					}
				]
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(mainbadge.$$.fragment);
			t = space();
			create_component(showcase.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(mainbadge.$$.fragment, nodes);
			t = claim_space(nodes);
			claim_component(showcase.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(mainbadge, target, anchor);
			insert_dev(target, t, anchor);
			mount_component(showcase, target, anchor);
			current = true;
		},
		i: function intro(local) {
			if (current) return;
			transition_in(mainbadge.$$.fragment, local);
			transition_in(showcase.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(mainbadge.$$.fragment, local);
			transition_out(showcase.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(mainbadge, detaching);
			if (detaching) detach_dev(t);
			destroy_component(showcase, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(13:2) {#if name === 'Badges'}",
		ctx
	});

	return block;
}

function create_fragment$4(ctx) {
	let div1;
	let div0;
	let h3;
	let t0;
	let t1;
	let h2;
	let t2;
	let t3;
	let current_block_type_index;
	let if_block;
	let current;
	const if_block_creators = [create_if_block, create_if_block_1, create_if_block_2];
	const if_blocks = [];

	function select_block_type(ctx, dirty) {
		if (/*name*/ ctx[0] === "Badges") return 0;
		if (/*name*/ ctx[0] === "Friends") return 1;
		if (/*name*/ ctx[0] === "Groups") return 2;
		return -1;
	}

	if (~(current_block_type_index = select_block_type(ctx))) {
		if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
	}

	const block = {
		c: function create() {
			div1 = element("div");
			div0 = element("div");
			h3 = element("h3");
			t0 = text(/*name*/ ctx[0]);
			t1 = space();
			h2 = element("h2");
			t2 = text(/*number*/ ctx[1]);
			t3 = space();
			if (if_block) if_block.c();
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { id: true, class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { id: true, class: true });
			var div0_nodes = children(div0);
			h3 = claim_element(div0_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t0 = claim_text(h3_nodes, /*name*/ ctx[0]);
			h3_nodes.forEach(detach_dev);
			t1 = claim_space(div0_nodes);
			h2 = claim_element(div0_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t2 = claim_text(h2_nodes, /*number*/ ctx[1]);
			h2_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t3 = claim_space(div1_nodes);
			if (if_block) if_block.l(div1_nodes);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h3, "class", "svelte-vttx3g");
			add_location(h3, file$4, 9, 4, 173);
			attr_dev(h2, "class", "svelte-vttx3g");
			add_location(h2, file$4, 10, 4, 193);
			attr_dev(div0, "id", "title");
			attr_dev(div0, "class", "svelte-vttx3g");
			add_location(div0, file$4, 8, 2, 152);
			attr_dev(div1, "id", /*id*/ ctx[2]);
			attr_dev(div1, "class", "svelte-vttx3g");
			add_location(div1, file$4, 7, 0, 139);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, div0);
			append_dev(div0, h3);
			append_dev(h3, t0);
			append_dev(div0, t1);
			append_dev(div0, h2);
			append_dev(h2, t2);
			append_dev(div1, t3);

			if (~current_block_type_index) {
				if_blocks[current_block_type_index].m(div1, null);
			}

			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (!current || dirty & /*name*/ 1) set_data_dev(t0, /*name*/ ctx[0]);
			if (!current || dirty & /*number*/ 2) set_data_dev(t2, /*number*/ ctx[1]);
			let previous_block_index = current_block_type_index;
			current_block_type_index = select_block_type(ctx);

			if (current_block_type_index !== previous_block_index) {
				if (if_block) {
					group_outros();

					transition_out(if_blocks[previous_block_index], 1, 1, () => {
						if_blocks[previous_block_index] = null;
					});

					check_outros();
				}

				if (~current_block_type_index) {
					if_block = if_blocks[current_block_type_index];

					if (!if_block) {
						if_block = if_blocks[current_block_type_index] = if_block_creators[current_block_type_index](ctx);
						if_block.c();
					}

					transition_in(if_block, 1);
					if_block.m(div1, null);
				} else {
					if_block = null;
				}
			}

			if (!current || dirty & /*id*/ 4) {
				attr_dev(div1, "id", /*id*/ ctx[2]);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);

			if (~current_block_type_index) {
				if_blocks[current_block_type_index].d();
			}
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$4.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$4($$self, $$props, $$invalidate) {
	let { name } = $$props, { number } = $$props, { id } = $$props;
	const writable_props = ["name", "number", "id"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<ProfileTile> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("ProfileTile", $$slots, []);

	$$self.$set = $$props => {
		if ("name" in $$props) $$invalidate(0, name = $$props.name);
		if ("number" in $$props) $$invalidate(1, number = $$props.number);
		if ("id" in $$props) $$invalidate(2, id = $$props.id);
	};

	$$self.$capture_state = () => ({ MainBadge, Showcase, name, number, id });

	$$self.$inject_state = $$props => {
		if ("name" in $$props) $$invalidate(0, name = $$props.name);
		if ("number" in $$props) $$invalidate(1, number = $$props.number);
		if ("id" in $$props) $$invalidate(2, id = $$props.id);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [name, number, id];
}

class ProfileTile extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$4, create_fragment$4, safe_not_equal, { name: 0, number: 1, id: 2 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "ProfileTile",
			options,
			id: create_fragment$4.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*name*/ ctx[0] === undefined && !("name" in props)) {
			console.warn("<ProfileTile> was created without expected prop 'name'");
		}

		if (/*number*/ ctx[1] === undefined && !("number" in props)) {
			console.warn("<ProfileTile> was created without expected prop 'number'");
		}

		if (/*id*/ ctx[2] === undefined && !("id" in props)) {
			console.warn("<ProfileTile> was created without expected prop 'id'");
		}
	}

	get name() {
		throw new Error("<ProfileTile>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set name(value) {
		throw new Error("<ProfileTile>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get number() {
		throw new Error("<ProfileTile>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set number(value) {
		throw new Error("<ProfileTile>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get id() {
		throw new Error("<ProfileTile>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set id(value) {
		throw new Error("<ProfileTile>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/LikeButton.svelte generated by Svelte v3.22.2 */

const file$5 = "src/components/LikeButton.svelte";

function create_fragment$5(ctx) {
	let div;
	let t0;
	let t1;
	let img;
	let img_src_value;
	let dispose;

	const block = {
		c: function create() {
			div = element("div");
			t0 = text("9");
			t1 = space();
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			t0 = claim_text(div_nodes, "9");
			div_nodes.forEach(detach_dev);
			t1 = claim_space(nodes);
			img = claim_element(nodes, "IMG", { src: true });
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", "count svelte-1b39rtj");
			add_location(div, file$5, 7, 0, 99);
			if (img.src !== (img_src_value = /*update*/ ctx[0] ? "like.svg" : "likeidle.svg")) attr_dev(img, "src", img_src_value);
			add_location(img, file$5, 8, 10, 136);
		},
		m: function mount(target, anchor, remount) {
			insert_dev(target, div, anchor);
			append_dev(div, t0);
			insert_dev(target, t1, anchor);
			insert_dev(target, img, anchor);
			if (remount) dispose();
			dispose = listen_dev(img, "click", /*likeUnlike*/ ctx[1], false, false, false);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*update*/ 1 && img.src !== (img_src_value = /*update*/ ctx[0] ? "like.svg" : "likeidle.svg")) {
				attr_dev(img, "src", img_src_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(img);
			dispose();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$5.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$5($$self, $$props, $$invalidate) {
	let { update = false } = $$props;

	function likeUnlike() {
		$$invalidate(0, update = !update);
	}

	const writable_props = ["update"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<LikeButton> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("LikeButton", $$slots, []);

	$$self.$set = $$props => {
		if ("update" in $$props) $$invalidate(0, update = $$props.update);
	};

	$$self.$capture_state = () => ({ update, likeUnlike });

	$$self.$inject_state = $$props => {
		if ("update" in $$props) $$invalidate(0, update = $$props.update);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [update, likeUnlike];
}

class LikeButton extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$5, create_fragment$5, safe_not_equal, { update: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "LikeButton",
			options,
			id: create_fragment$5.name
		});
	}

	get update() {
		throw new Error("<LikeButton>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set update(value) {
		throw new Error("<LikeButton>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/Artwork.svelte generated by Svelte v3.22.2 */
const file$6 = "src/components/Artwork.svelte";

function create_fragment$6(ctx) {
	let main;
	let div0;
	let h3;
	let t0;
	let t1;
	let h2;
	let t2;
	let t3;
	let div31;
	let div5;
	let div1;
	let t4;
	let div4;
	let div2;
	let t5;
	let t6;
	let div3;
	let t7;
	let div10;
	let div6;
	let t8;
	let div9;
	let div7;
	let t9;
	let t10;
	let div8;
	let t11;
	let div15;
	let div11;
	let t12;
	let div14;
	let div12;
	let t13;
	let t14;
	let div13;
	let t15;
	let div20;
	let div16;
	let t16;
	let div19;
	let div17;
	let t17;
	let t18;
	let div18;
	let t19;
	let div25;
	let div21;
	let t20;
	let div24;
	let div22;
	let t21;
	let t22;
	let div23;
	let t23;
	let div30;
	let div26;
	let t24;
	let div29;
	let div27;
	let t25;
	let t26;
	let div28;
	let current;
	const likebutton0 = new LikeButton({ $$inline: true });
	const likebutton1 = new LikeButton({ $$inline: true });
	const likebutton2 = new LikeButton({ $$inline: true });
	const likebutton3 = new LikeButton({ $$inline: true });
	const likebutton4 = new LikeButton({ $$inline: true });
	const likebutton5 = new LikeButton({ $$inline: true });

	const block = {
		c: function create() {
			main = element("main");
			div0 = element("div");
			h3 = element("h3");
			t0 = text("Artwork");
			t1 = space();
			h2 = element("h2");
			t2 = text("6");
			t3 = space();
			div31 = element("div");
			div5 = element("div");
			div1 = element("div");
			t4 = space();
			div4 = element("div");
			div2 = element("div");
			t5 = text("\"Ashen one\"");
			t6 = space();
			div3 = element("div");
			create_component(likebutton0.$$.fragment);
			t7 = space();
			div10 = element("div");
			div6 = element("div");
			t8 = space();
			div9 = element("div");
			div7 = element("div");
			t9 = text("\"Too many shadows\"");
			t10 = space();
			div8 = element("div");
			create_component(likebutton1.$$.fragment);
			t11 = space();
			div15 = element("div");
			div11 = element("div");
			t12 = space();
			div14 = element("div");
			div12 = element("div");
			t13 = text("\"You DIED\"");
			t14 = space();
			div13 = element("div");
			create_component(likebutton2.$$.fragment);
			t15 = space();
			div20 = element("div");
			div16 = element("div");
			t16 = space();
			div19 = element("div");
			div17 = element("div");
			t17 = text("\"Shadows die many times\"");
			t18 = space();
			div18 = element("div");
			create_component(likebutton3.$$.fragment);
			t19 = space();
			div25 = element("div");
			div21 = element("div");
			t20 = space();
			div24 = element("div");
			div22 = element("div");
			t21 = text("\"Estus Flask\"");
			t22 = space();
			div23 = element("div");
			create_component(likebutton4.$$.fragment);
			t23 = space();
			div30 = element("div");
			div26 = element("div");
			t24 = space();
			div29 = element("div");
			div27 = element("div");
			t25 = text("\"One short journey\"");
			t26 = space();
			div28 = element("div");
			create_component(likebutton5.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			main = claim_element(nodes, "MAIN", { class: true });
			var main_nodes = children(main);
			div0 = claim_element(main_nodes, "DIV", { id: true, class: true });
			var div0_nodes = children(div0);
			h3 = claim_element(div0_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t0 = claim_text(h3_nodes, "Artwork");
			h3_nodes.forEach(detach_dev);
			t1 = claim_space(div0_nodes);
			h2 = claim_element(div0_nodes, "H2", { class: true });
			var h2_nodes = children(h2);
			t2 = claim_text(h2_nodes, "6");
			h2_nodes.forEach(detach_dev);
			div0_nodes.forEach(detach_dev);
			t3 = claim_space(main_nodes);
			div31 = claim_element(main_nodes, "DIV", { id: true, class: true });
			var div31_nodes = children(div31);
			div5 = claim_element(div31_nodes, "DIV", { class: true });
			var div5_nodes = children(div5);
			div1 = claim_element(div5_nodes, "DIV", { class: true, style: true });
			children(div1).forEach(detach_dev);
			t4 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			div2 = claim_element(div4_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			t5 = claim_text(div2_nodes, "\"Ashen one\"");
			div2_nodes.forEach(detach_dev);
			t6 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			claim_component(likebutton0.$$.fragment, div3_nodes);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t7 = claim_space(div31_nodes);
			div10 = claim_element(div31_nodes, "DIV", { class: true });
			var div10_nodes = children(div10);
			div6 = claim_element(div10_nodes, "DIV", { class: true, style: true });
			children(div6).forEach(detach_dev);
			t8 = claim_space(div10_nodes);
			div9 = claim_element(div10_nodes, "DIV", { class: true });
			var div9_nodes = children(div9);
			div7 = claim_element(div9_nodes, "DIV", { class: true });
			var div7_nodes = children(div7);
			t9 = claim_text(div7_nodes, "\"Too many shadows\"");
			div7_nodes.forEach(detach_dev);
			t10 = claim_space(div9_nodes);
			div8 = claim_element(div9_nodes, "DIV", { class: true });
			var div8_nodes = children(div8);
			claim_component(likebutton1.$$.fragment, div8_nodes);
			div8_nodes.forEach(detach_dev);
			div9_nodes.forEach(detach_dev);
			div10_nodes.forEach(detach_dev);
			t11 = claim_space(div31_nodes);
			div15 = claim_element(div31_nodes, "DIV", { class: true });
			var div15_nodes = children(div15);
			div11 = claim_element(div15_nodes, "DIV", { class: true, style: true });
			children(div11).forEach(detach_dev);
			t12 = claim_space(div15_nodes);
			div14 = claim_element(div15_nodes, "DIV", { class: true });
			var div14_nodes = children(div14);
			div12 = claim_element(div14_nodes, "DIV", { class: true });
			var div12_nodes = children(div12);
			t13 = claim_text(div12_nodes, "\"You DIED\"");
			div12_nodes.forEach(detach_dev);
			t14 = claim_space(div14_nodes);
			div13 = claim_element(div14_nodes, "DIV", { class: true });
			var div13_nodes = children(div13);
			claim_component(likebutton2.$$.fragment, div13_nodes);
			div13_nodes.forEach(detach_dev);
			div14_nodes.forEach(detach_dev);
			div15_nodes.forEach(detach_dev);
			t15 = claim_space(div31_nodes);
			div20 = claim_element(div31_nodes, "DIV", { class: true });
			var div20_nodes = children(div20);
			div16 = claim_element(div20_nodes, "DIV", { class: true, style: true });
			children(div16).forEach(detach_dev);
			t16 = claim_space(div20_nodes);
			div19 = claim_element(div20_nodes, "DIV", { class: true });
			var div19_nodes = children(div19);
			div17 = claim_element(div19_nodes, "DIV", { class: true });
			var div17_nodes = children(div17);
			t17 = claim_text(div17_nodes, "\"Shadows die many times\"");
			div17_nodes.forEach(detach_dev);
			t18 = claim_space(div19_nodes);
			div18 = claim_element(div19_nodes, "DIV", { class: true });
			var div18_nodes = children(div18);
			claim_component(likebutton3.$$.fragment, div18_nodes);
			div18_nodes.forEach(detach_dev);
			div19_nodes.forEach(detach_dev);
			div20_nodes.forEach(detach_dev);
			t19 = claim_space(div31_nodes);
			div25 = claim_element(div31_nodes, "DIV", { class: true });
			var div25_nodes = children(div25);
			div21 = claim_element(div25_nodes, "DIV", { class: true, style: true });
			children(div21).forEach(detach_dev);
			t20 = claim_space(div25_nodes);
			div24 = claim_element(div25_nodes, "DIV", { class: true });
			var div24_nodes = children(div24);
			div22 = claim_element(div24_nodes, "DIV", { class: true });
			var div22_nodes = children(div22);
			t21 = claim_text(div22_nodes, "\"Estus Flask\"");
			div22_nodes.forEach(detach_dev);
			t22 = claim_space(div24_nodes);
			div23 = claim_element(div24_nodes, "DIV", { class: true });
			var div23_nodes = children(div23);
			claim_component(likebutton4.$$.fragment, div23_nodes);
			div23_nodes.forEach(detach_dev);
			div24_nodes.forEach(detach_dev);
			div25_nodes.forEach(detach_dev);
			t23 = claim_space(div31_nodes);
			div30 = claim_element(div31_nodes, "DIV", { class: true });
			var div30_nodes = children(div30);
			div26 = claim_element(div30_nodes, "DIV", { class: true, style: true });
			children(div26).forEach(detach_dev);
			t24 = claim_space(div30_nodes);
			div29 = claim_element(div30_nodes, "DIV", { class: true });
			var div29_nodes = children(div29);
			div27 = claim_element(div29_nodes, "DIV", { class: true });
			var div27_nodes = children(div27);
			t25 = claim_text(div27_nodes, "\"One short journey\"");
			div27_nodes.forEach(detach_dev);
			t26 = claim_space(div29_nodes);
			div28 = claim_element(div29_nodes, "DIV", { class: true });
			var div28_nodes = children(div28);
			claim_component(likebutton5.$$.fragment, div28_nodes);
			div28_nodes.forEach(detach_dev);
			div29_nodes.forEach(detach_dev);
			div30_nodes.forEach(detach_dev);
			div31_nodes.forEach(detach_dev);
			main_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h3, "class", "svelte-1l9r2pc");
			add_location(h3, file$6, 7, 4, 96);
			attr_dev(h2, "class", "svelte-1l9r2pc");
			add_location(h2, file$6, 8, 4, 117);
			attr_dev(div0, "id", "title");
			attr_dev(div0, "class", "svelte-1l9r2pc");
			add_location(div0, file$6, 6, 2, 75);
			attr_dev(div1, "class", "artwork--item svelte-1l9r2pc");
			set_style(div1, "background-image", "url(https://cdnb.artstation.com/p/assets/images/images/013/913/993/large/rao-zhengang-0e1215a3-1791-4c60-aad9-633627659cf9.jpg?1541630208)");
			add_location(div1, file$6, 12, 6, 200);
			attr_dev(div2, "class", "title");
			add_location(div2, file$6, 17, 8, 462);
			attr_dev(div3, "class", "actions svelte-1l9r2pc");
			add_location(div3, file$6, 18, 8, 507);
			attr_dev(div4, "class", "artwork--info svelte-1l9r2pc");
			add_location(div4, file$6, 16, 6, 426);
			attr_dev(div5, "class", "artwork_container svelte-1l9r2pc");
			add_location(div5, file$6, 11, 4, 162);
			attr_dev(div6, "class", "artwork--item svelte-1l9r2pc");
			set_style(div6, "background-image", "url(https://farm5.staticflickr.com/4610/39871466181_d6b592a9e1_b.jpg)");
			add_location(div6, file$6, 24, 6, 635);
			attr_dev(div7, "class", "title");
			add_location(div7, file$6, 29, 8, 828);
			attr_dev(div8, "class", "actions svelte-1l9r2pc");
			add_location(div8, file$6, 30, 8, 880);
			attr_dev(div9, "class", "artwork--info svelte-1l9r2pc");
			add_location(div9, file$6, 28, 6, 792);
			attr_dev(div10, "class", "artwork_container svelte-1l9r2pc");
			add_location(div10, file$6, 23, 4, 597);
			attr_dev(div11, "class", "artwork--item svelte-1l9r2pc");
			set_style(div11, "background-image", "url(https://cdnb.artstation.com/p/assets/images/images/005/617/333/large/omer-tunc-bloodborn-jpgg.jpg?1492494545)");
			add_location(div11, file$6, 36, 6, 1008);
			attr_dev(div12, "class", "title");
			add_location(div12, file$6, 41, 8, 1245);
			attr_dev(div13, "class", "actions svelte-1l9r2pc");
			add_location(div13, file$6, 42, 8, 1289);
			attr_dev(div14, "class", "artwork--info svelte-1l9r2pc");
			add_location(div14, file$6, 40, 6, 1209);
			attr_dev(div15, "class", "artwork_container svelte-1l9r2pc");
			add_location(div15, file$6, 35, 4, 970);
			attr_dev(div16, "class", "artwork--item svelte-1l9r2pc");
			set_style(div16, "background-image", "url(https://images.hdqwalls.com/download/sekiro-shadows-die-twice-digital-fan-art-6l-2560x1700.jpg)");
			add_location(div16, file$6, 48, 6, 1417);
			attr_dev(div17, "class", "title");
			add_location(div17, file$6, 53, 8, 1640);
			attr_dev(div18, "class", "actions svelte-1l9r2pc");
			add_location(div18, file$6, 54, 8, 1698);
			attr_dev(div19, "class", "artwork--info svelte-1l9r2pc");
			add_location(div19, file$6, 52, 6, 1604);
			attr_dev(div20, "class", "artwork_container svelte-1l9r2pc");
			add_location(div20, file$6, 47, 4, 1379);
			attr_dev(div21, "class", "artwork--item svelte-1l9r2pc");
			set_style(div21, "background-image", "url(https://pbs.twimg.com/media/D5QAdraWkAIQsCO.jpg)");
			add_location(div21, file$6, 60, 6, 1832);
			attr_dev(div22, "class", "title");
			add_location(div22, file$6, 65, 8, 2008);
			attr_dev(div23, "class", "actions svelte-1l9r2pc");
			add_location(div23, file$6, 66, 8, 2055);
			attr_dev(div24, "class", "artwork--info svelte-1l9r2pc");
			add_location(div24, file$6, 64, 6, 1972);
			attr_dev(div25, "class", "artwork_container svelte-1l9r2pc");
			add_location(div25, file$6, 59, 4, 1794);
			attr_dev(div26, "class", "artwork--item svelte-1l9r2pc");
			set_style(div26, "background-image", "url(https://cdn.staticneo.com/ca/journey_conceptart_EaFXQ.jpg)");
			add_location(div26, file$6, 72, 6, 2189);
			attr_dev(div27, "class", "title");
			add_location(div27, file$6, 77, 8, 2375);
			attr_dev(div28, "class", "actions svelte-1l9r2pc");
			add_location(div28, file$6, 78, 8, 2428);
			attr_dev(div29, "class", "artwork--info svelte-1l9r2pc");
			add_location(div29, file$6, 76, 6, 2339);
			attr_dev(div30, "class", "artwork_container svelte-1l9r2pc");
			add_location(div30, file$6, 71, 4, 2151);
			attr_dev(div31, "id", "artwork");
			attr_dev(div31, "class", "svelte-1l9r2pc");
			add_location(div31, file$6, 10, 2, 139);
			attr_dev(main, "class", "svelte-1l9r2pc");
			add_location(main, file$6, 5, 0, 66);
		},
		m: function mount(target, anchor) {
			insert_dev(target, main, anchor);
			append_dev(main, div0);
			append_dev(div0, h3);
			append_dev(h3, t0);
			append_dev(div0, t1);
			append_dev(div0, h2);
			append_dev(h2, t2);
			append_dev(main, t3);
			append_dev(main, div31);
			append_dev(div31, div5);
			append_dev(div5, div1);
			append_dev(div5, t4);
			append_dev(div5, div4);
			append_dev(div4, div2);
			append_dev(div2, t5);
			append_dev(div4, t6);
			append_dev(div4, div3);
			mount_component(likebutton0, div3, null);
			append_dev(div31, t7);
			append_dev(div31, div10);
			append_dev(div10, div6);
			append_dev(div10, t8);
			append_dev(div10, div9);
			append_dev(div9, div7);
			append_dev(div7, t9);
			append_dev(div9, t10);
			append_dev(div9, div8);
			mount_component(likebutton1, div8, null);
			append_dev(div31, t11);
			append_dev(div31, div15);
			append_dev(div15, div11);
			append_dev(div15, t12);
			append_dev(div15, div14);
			append_dev(div14, div12);
			append_dev(div12, t13);
			append_dev(div14, t14);
			append_dev(div14, div13);
			mount_component(likebutton2, div13, null);
			append_dev(div31, t15);
			append_dev(div31, div20);
			append_dev(div20, div16);
			append_dev(div20, t16);
			append_dev(div20, div19);
			append_dev(div19, div17);
			append_dev(div17, t17);
			append_dev(div19, t18);
			append_dev(div19, div18);
			mount_component(likebutton3, div18, null);
			append_dev(div31, t19);
			append_dev(div31, div25);
			append_dev(div25, div21);
			append_dev(div25, t20);
			append_dev(div25, div24);
			append_dev(div24, div22);
			append_dev(div22, t21);
			append_dev(div24, t22);
			append_dev(div24, div23);
			mount_component(likebutton4, div23, null);
			append_dev(div31, t23);
			append_dev(div31, div30);
			append_dev(div30, div26);
			append_dev(div30, t24);
			append_dev(div30, div29);
			append_dev(div29, div27);
			append_dev(div27, t25);
			append_dev(div29, t26);
			append_dev(div29, div28);
			mount_component(likebutton5, div28, null);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(likebutton0.$$.fragment, local);
			transition_in(likebutton1.$$.fragment, local);
			transition_in(likebutton2.$$.fragment, local);
			transition_in(likebutton3.$$.fragment, local);
			transition_in(likebutton4.$$.fragment, local);
			transition_in(likebutton5.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(likebutton0.$$.fragment, local);
			transition_out(likebutton1.$$.fragment, local);
			transition_out(likebutton2.$$.fragment, local);
			transition_out(likebutton3.$$.fragment, local);
			transition_out(likebutton4.$$.fragment, local);
			transition_out(likebutton5.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(main);
			destroy_component(likebutton0);
			destroy_component(likebutton1);
			destroy_component(likebutton2);
			destroy_component(likebutton3);
			destroy_component(likebutton4);
			destroy_component(likebutton5);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$6.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$6($$self, $$props, $$invalidate) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Artwork> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Artwork", $$slots, []);
	$$self.$capture_state = () => ({ LikeButton });
	return [];
}

class Artwork extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$6, create_fragment$6, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Artwork",
			options,
			id: create_fragment$6.name
		});
	}
}

/* src/components/About.svelte generated by Svelte v3.22.2 */
const file$7 = "src/components/About.svelte";

function create_fragment$7(ctx) {
	let main;
	let t0;
	let t1;
	let t2;
	let t3;
	let current;
	const aboutmetile = new AboutMeTile({ $$inline: true });

	const profiletile0 = new ProfileTile({
			props: {
				id: "friends",
				name: "Friends",
				number: "28"
			},
			$$inline: true
		});

	const profiletile1 = new ProfileTile({
			props: {
				id: "badges",
				name: "Badges",
				number: "14"
			},
			$$inline: true
		});

	const profiletile2 = new ProfileTile({
			props: {
				id: "groups",
				name: "Groups",
				number: "8"
			},
			$$inline: true
		});

	const artwork = new Artwork({ $$inline: true });

	const block = {
		c: function create() {
			main = element("main");
			create_component(aboutmetile.$$.fragment);
			t0 = space();
			create_component(profiletile0.$$.fragment);
			t1 = space();
			create_component(profiletile1.$$.fragment);
			t2 = space();
			create_component(profiletile2.$$.fragment);
			t3 = space();
			create_component(artwork.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			main = claim_element(nodes, "MAIN", { class: true });
			var main_nodes = children(main);
			claim_component(aboutmetile.$$.fragment, main_nodes);
			t0 = claim_space(main_nodes);
			claim_component(profiletile0.$$.fragment, main_nodes);
			t1 = claim_space(main_nodes);
			claim_component(profiletile1.$$.fragment, main_nodes);
			t2 = claim_space(main_nodes);
			claim_component(profiletile2.$$.fragment, main_nodes);
			main_nodes.forEach(detach_dev);
			t3 = claim_space(nodes);
			claim_component(artwork.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			attr_dev(main, "class", "svelte-p06umt");
			add_location(main, file$7, 7, 0, 203);
		},
		m: function mount(target, anchor) {
			insert_dev(target, main, anchor);
			mount_component(aboutmetile, main, null);
			append_dev(main, t0);
			mount_component(profiletile0, main, null);
			append_dev(main, t1);
			mount_component(profiletile1, main, null);
			append_dev(main, t2);
			mount_component(profiletile2, main, null);
			insert_dev(target, t3, anchor);
			mount_component(artwork, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(aboutmetile.$$.fragment, local);
			transition_in(profiletile0.$$.fragment, local);
			transition_in(profiletile1.$$.fragment, local);
			transition_in(profiletile2.$$.fragment, local);
			transition_in(artwork.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(aboutmetile.$$.fragment, local);
			transition_out(profiletile0.$$.fragment, local);
			transition_out(profiletile1.$$.fragment, local);
			transition_out(profiletile2.$$.fragment, local);
			transition_out(artwork.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(main);
			destroy_component(aboutmetile);
			destroy_component(profiletile0);
			destroy_component(profiletile1);
			destroy_component(profiletile2);
			if (detaching) detach_dev(t3);
			destroy_component(artwork, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$7.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$7($$self, $$props, $$invalidate) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<About> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("About", $$slots, []);
	$$self.$capture_state = () => ({ AboutMeTile, ProfileTile, Artwork });
	return [];
}

class About extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$7, create_fragment$7, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "About",
			options,
			id: create_fragment$7.name
		});
	}
}

/* src/routes/profile.svelte generated by Svelte v3.22.2 */
const file$8 = "src/routes/profile.svelte";

function create_fragment$8(ctx) {
	let t0;
	let t1;
	let div5;
	let t2;
	let div3;
	let div0;
	let t3;
	let t4;
	let div1;
	let t5;
	let t6;
	let div2;
	let t7;
	let t8;
	let div4;
	let t9;
	let current;

	const navbar = new Navbar({
			props: { title: "Profile" },
			$$inline: true
		});

	const profileheader = new ProfileHeader({
			props: {
				name: /*username_value*/ ctx[0],
				alias: "bingotheslayer",
				profilePicture: "profilepicture.jpg",
				level: "40"
			},
			$$inline: true
		});

	const about = new About({ $$inline: true });
	const tabbar = new Tabbar({ props: { location: 2 }, $$inline: true });

	const block = {
		c: function create() {
			t0 = space();
			create_component(navbar.$$.fragment);
			t1 = space();
			div5 = element("div");
			create_component(profileheader.$$.fragment);
			t2 = space();
			div3 = element("div");
			div0 = element("div");
			t3 = text("About");
			t4 = space();
			div1 = element("div");
			t5 = text("Activity");
			t6 = space();
			div2 = element("div");
			t7 = text("Inventory");
			t8 = space();
			div4 = element("div");
			create_component(about.$$.fragment);
			t9 = space();
			create_component(tabbar.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-fcey8i\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			claim_component(navbar.$$.fragment, nodes);
			t1 = claim_space(nodes);
			div5 = claim_element(nodes, "DIV", { id: true, class: true });
			var div5_nodes = children(div5);
			claim_component(profileheader.$$.fragment, div5_nodes);
			t2 = claim_space(div5_nodes);
			div3 = claim_element(div5_nodes, "DIV", { id: true, class: true });
			var div3_nodes = children(div3);
			div0 = claim_element(div3_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			t3 = claim_text(div0_nodes, "About");
			div0_nodes.forEach(detach_dev);
			t4 = claim_space(div3_nodes);
			div1 = claim_element(div3_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			t5 = claim_text(div1_nodes, "Activity");
			div1_nodes.forEach(detach_dev);
			t6 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			t7 = claim_text(div2_nodes, "Inventory");
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			t8 = claim_space(div5_nodes);
			div4 = claim_element(div5_nodes, "DIV", { id: true, class: true });
			var div4_nodes = children(div4);
			claim_component(about.$$.fragment, div4_nodes);
			div4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			t9 = claim_space(nodes);
			claim_component(tabbar.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			document.title = "Profile :: Steam Mobile";
			attr_dev(div0, "class", "selected svelte-1yf3v8h");
			add_location(div0, file$8, 26, 4, 656);
			attr_dev(div1, "class", "svelte-1yf3v8h");
			add_location(div1, file$8, 27, 4, 694);
			attr_dev(div2, "class", "svelte-1yf3v8h");
			add_location(div2, file$8, 28, 4, 718);
			attr_dev(div3, "id", "navtray");
			attr_dev(div3, "class", "svelte-1yf3v8h");
			add_location(div3, file$8, 25, 2, 633);
			attr_dev(div4, "id", "container");
			attr_dev(div4, "class", "svelte-1yf3v8h");
			add_location(div4, file$8, 30, 2, 750);
			attr_dev(div5, "id", "profile");
			attr_dev(div5, "class", "svelte-1yf3v8h");
			add_location(div5, file$8, 19, 0, 484);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			mount_component(navbar, target, anchor);
			insert_dev(target, t1, anchor);
			insert_dev(target, div5, anchor);
			mount_component(profileheader, div5, null);
			append_dev(div5, t2);
			append_dev(div5, div3);
			append_dev(div3, div0);
			append_dev(div0, t3);
			append_dev(div3, t4);
			append_dev(div3, div1);
			append_dev(div1, t5);
			append_dev(div3, t6);
			append_dev(div3, div2);
			append_dev(div2, t7);
			append_dev(div5, t8);
			append_dev(div5, div4);
			mount_component(about, div4, null);
			insert_dev(target, t9, anchor);
			mount_component(tabbar, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const profileheader_changes = {};
			if (dirty & /*username_value*/ 1) profileheader_changes.name = /*username_value*/ ctx[0];
			profileheader.$set(profileheader_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(navbar.$$.fragment, local);
			transition_in(profileheader.$$.fragment, local);
			transition_in(about.$$.fragment, local);
			transition_in(tabbar.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(navbar.$$.fragment, local);
			transition_out(profileheader.$$.fragment, local);
			transition_out(about.$$.fragment, local);
			transition_out(tabbar.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			destroy_component(navbar, detaching);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(div5);
			destroy_component(profileheader);
			destroy_component(about);
			if (detaching) detach_dev(t9);
			destroy_component(tabbar, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$8.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$8($$self, $$props, $$invalidate) {
	let username_value;

	const unsubscribe = username.subscribe(value => {
		$$invalidate(0, username_value = value);
	});

	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Profile> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Profile", $$slots, []);

	$$self.$capture_state = () => ({
		Navbar,
		Tabbar,
		ProfileHeader,
		About,
		username,
		username_value,
		unsubscribe
	});

	$$self.$inject_state = $$props => {
		if ("username_value" in $$props) $$invalidate(0, username_value = $$props.username_value);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [username_value];
}

class Profile extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$8, create_fragment$8, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Profile",
			options,
			id: create_fragment$8.name
		});
	}
}

export default Profile;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
