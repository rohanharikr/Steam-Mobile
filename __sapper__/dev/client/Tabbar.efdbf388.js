import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, A as add_render_callback, B as create_slot, C as createEventDispatcher, v as validate_slots, e as element, c as claim_element, b as children, f as detach_dev, j as attr_dev, D as null_to_empty, l as add_location, m as insert_dev, E as run_all, F as listen_dev, G as action_destroyer, H as get_slot_context, I as get_slot_changes, x as transition_in, y as transition_out, q as create_component, u as claim_component, w as mount_component, z as destroy_component, a as space, t as text, g as claim_space, h as claim_text, k as set_style, n as append_dev, o as set_data_dev, p as noop } from './client.6edb4dd6.js';

const warn = (msg, val) => console.warn(`[svelte-headroom]:`, msg, val);

function validate({ duration, offset, tolerance }) {
  if (typeof offset !== "number")
    warn("The `offset` prop is not a number: ", offset);
  if (typeof tolerance !== "number")
    warn("The `tolerance` prop is not a number: ", tolerance);
  if (typeof duration !== "string")
    warn("The `duration` prop is not a string such as '200ms': ", duration);
}

/* node_modules/svelte-headroom/src/index.svelte generated by Svelte v3.22.2 */
const file = "node_modules/svelte-headroom/src/index.svelte";

function create_fragment(ctx) {
	let scrolling = false;

	let clear_scrolling = () => {
		scrolling = false;
	};

	let scrolling_timeout;
	let div;
	let div_class_value;
	let action_action;
	let current;
	let dispose;
	add_render_callback(/*onwindowscroll*/ ctx[14]);
	const default_slot_template = /*$$slots*/ ctx[13].default;
	const default_slot = create_slot(default_slot_template, ctx, /*$$scope*/ ctx[12], null);

	const block = {
		c: function create() {
			div = element("div");
			if (default_slot) default_slot.c();
			this.h();
		},
		l: function claim(nodes) {
			div = claim_element(nodes, "DIV", { class: true });
			var div_nodes = children(div);
			if (default_slot) default_slot.l(div_nodes);
			div_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div, "class", div_class_value = "" + (null_to_empty(/*headerClass*/ ctx[0]) + " svelte-1ti945t"));
			add_location(div, file, 61, 0, 1332);
		},
		m: function mount(target, anchor, remount) {
			insert_dev(target, div, anchor);

			if (default_slot) {
				default_slot.m(div, null);
			}

			current = true;
			if (remount) run_all(dispose);

			dispose = [
				listen_dev(window, "scroll", () => {
					scrolling = true;
					clearTimeout(scrolling_timeout);
					scrolling_timeout = setTimeout(clear_scrolling, 100);
					/*onwindowscroll*/ ctx[14]();
				}),
				action_destroyer(action_action = /*action*/ ctx[2].call(null, div))
			];
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*y*/ 2 && !scrolling) {
				scrolling = true;
				clearTimeout(scrolling_timeout);
				scrollTo(window.pageXOffset, /*y*/ ctx[1]);
				scrolling_timeout = setTimeout(clear_scrolling, 100);
			}

			if (default_slot) {
				if (default_slot.p && dirty & /*$$scope*/ 4096) {
					default_slot.p(get_slot_context(default_slot_template, ctx, /*$$scope*/ ctx[12], null), get_slot_changes(default_slot_template, /*$$scope*/ ctx[12], dirty, null));
				}
			}

			if (!current || dirty & /*headerClass*/ 1 && div_class_value !== (div_class_value = "" + (null_to_empty(/*headerClass*/ ctx[0]) + " svelte-1ti945t"))) {
				attr_dev(div, "class", div_class_value);
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(default_slot, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(default_slot, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div);
			if (default_slot) default_slot.d(detaching);
			run_all(dispose);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { duration = "300ms" } = $$props;
	let { offset = 0 } = $$props;
	let { tolerance = 0 } = $$props;
	let headerClass = "";
	let lastHeaderClass = "";
	let y = 0;
	let lastY = 0;
	let prefix = "svelte-headroom--";
	const dispatch = createEventDispatcher();

	function deriveClass(y = 0, scrolled = 0) {
		if (y < offset) return "";
		if (Math.abs(scrolled) < tolerance) return headerClass;
		if (scrolled > 0) return "";
		if (scrolled < 0) return `${prefix}unpin`;
		return headerClass;
	}

	function updateClass(y = 0) {
		const scrolledPxs = lastY - y;
		const result = deriveClass(y, scrolledPxs);
		lastY = y;
		return result;
	}

	function action(node) {
		node.style.transitionDuration = duration;
	}

	const writable_props = ["duration", "offset", "tolerance"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Src> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Src", $$slots, ['default']);

	function onwindowscroll() {
		$$invalidate(1, y = window.pageYOffset);
	}

	$$self.$set = $$props => {
		if ("duration" in $$props) $$invalidate(3, duration = $$props.duration);
		if ("offset" in $$props) $$invalidate(4, offset = $$props.offset);
		if ("tolerance" in $$props) $$invalidate(5, tolerance = $$props.tolerance);
		if ("$$scope" in $$props) $$invalidate(12, $$scope = $$props.$$scope);
	};

	$$self.$capture_state = () => ({
		createEventDispatcher,
		validate,
		duration,
		offset,
		tolerance,
		headerClass,
		lastHeaderClass,
		y,
		lastY,
		prefix,
		dispatch,
		deriveClass,
		updateClass,
		action
	});

	$$self.$inject_state = $$props => {
		if ("duration" in $$props) $$invalidate(3, duration = $$props.duration);
		if ("offset" in $$props) $$invalidate(4, offset = $$props.offset);
		if ("tolerance" in $$props) $$invalidate(5, tolerance = $$props.tolerance);
		if ("headerClass" in $$props) $$invalidate(0, headerClass = $$props.headerClass);
		if ("lastHeaderClass" in $$props) $$invalidate(6, lastHeaderClass = $$props.lastHeaderClass);
		if ("y" in $$props) $$invalidate(1, y = $$props.y);
		if ("lastY" in $$props) lastY = $$props.lastY;
		if ("prefix" in $$props) prefix = $$props.prefix;
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	$$self.$$.update = () => {
		if ($$self.$$.dirty & /*duration, offset, tolerance, y, headerClass, lastHeaderClass*/ 123) {
			 {
				validate({ duration, offset, tolerance });
				$$invalidate(0, headerClass = updateClass(y));

				if (headerClass !== lastHeaderClass) {
					dispatch(headerClass ? "unpin" : "pin");
				}

				$$invalidate(6, lastHeaderClass = headerClass);
			}
		}
	};

	return [
		headerClass,
		y,
		action,
		duration,
		offset,
		tolerance,
		lastHeaderClass,
		lastY,
		prefix,
		dispatch,
		deriveClass,
		updateClass,
		$$scope,
		$$slots,
		onwindowscroll
	];
}

class Src extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance, create_fragment, safe_not_equal, { duration: 3, offset: 4, tolerance: 5 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Src",
			options,
			id: create_fragment.name
		});
	}

	get duration() {
		throw new Error("<Src>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set duration(value) {
		throw new Error("<Src>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get offset() {
		throw new Error("<Src>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set offset(value) {
		throw new Error("<Src>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get tolerance() {
		throw new Error("<Src>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set tolerance(value) {
		throw new Error("<Src>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/Navbar.svelte generated by Svelte v3.22.2 */
const file$1 = "src/components/Navbar.svelte";

// (6:0) <Headroom offset={50} tolerance={5}>
function create_default_slot(ctx) {
	let div2;
	let img0;
	let img0_src_value;
	let t0;
	let div1;
	let div0;
	let t1;
	let t2;
	let img1;
	let img1_src_value;

	const block = {
		c: function create() {
			div2 = element("div");
			img0 = element("img");
			t0 = space();
			div1 = element("div");
			div0 = element("div");
			t1 = text(/*title*/ ctx[0]);
			t2 = space();
			img1 = element("img");
			this.h();
		},
		l: function claim(nodes) {
			div2 = claim_element(nodes, "DIV", { id: true, class: true });
			var div2_nodes = children(div2);
			img0 = claim_element(div2_nodes, "IMG", { src: true, height: true, style: true });
			t0 = claim_space(div2_nodes);
			div1 = claim_element(div2_nodes, "DIV", { id: true, class: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { style: true, class: true });
			var div0_nodes = children(div0);
			t1 = claim_text(div0_nodes, /*title*/ ctx[0]);
			div0_nodes.forEach(detach_dev);
			t2 = claim_space(div1_nodes);
			img1 = claim_element(div1_nodes, "IMG", { src: true });
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img0.src !== (img0_src_value = "steambrand.svg")) attr_dev(img0, "src", img0_src_value);
			attr_dev(img0, "height", "28px");
			set_style(img0, "opacity", "1");
			add_location(img0, file$1, 7, 4, 141);
			set_style(div0, "opacity", "0.6");
			attr_dev(div0, "class", "svelte-13oo9il");
			add_location(div0, file$1, 9, 6, 238);
			if (img1.src !== (img1_src_value = "search.svg")) attr_dev(img1, "src", img1_src_value);
			add_location(img1, file$1, 10, 6, 284);
			attr_dev(div1, "id", "navbar--right");
			attr_dev(div1, "class", "svelte-13oo9il");
			add_location(div1, file$1, 8, 4, 207);
			attr_dev(div2, "id", "navbar");
			attr_dev(div2, "class", "svelte-13oo9il");
			add_location(div2, file$1, 6, 2, 119);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div2, anchor);
			append_dev(div2, img0);
			append_dev(div2, t0);
			append_dev(div2, div1);
			append_dev(div1, div0);
			append_dev(div0, t1);
			append_dev(div1, t2);
			append_dev(div1, img1);
		},
		p: function update(ctx, dirty) {
			if (dirty & /*title*/ 1) set_data_dev(t1, /*title*/ ctx[0]);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div2);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_default_slot.name,
		type: "slot",
		source: "(6:0) <Headroom offset={50} tolerance={5}>",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let current;

	const headroom = new Src({
			props: {
				offset: 50,
				tolerance: 5,
				$$slots: { default: [create_default_slot] },
				$$scope: { ctx }
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(headroom.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(headroom.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(headroom, target, anchor);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const headroom_changes = {};

			if (dirty & /*$$scope, title*/ 3) {
				headroom_changes.$$scope = { dirty, ctx };
			}

			headroom.$set(headroom_changes);
		},
		i: function intro(local) {
			if (current) return;
			transition_in(headroom.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(headroom.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(headroom, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { title } = $$props;
	const writable_props = ["title"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Navbar> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Navbar", $$slots, []);

	$$self.$set = $$props => {
		if ("title" in $$props) $$invalidate(0, title = $$props.title);
	};

	$$self.$capture_state = () => ({ Headroom: Src, title });

	$$self.$inject_state = $$props => {
		if ("title" in $$props) $$invalidate(0, title = $$props.title);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [title];
}

class Navbar extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$1, create_fragment$1, safe_not_equal, { title: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Navbar",
			options,
			id: create_fragment$1.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*title*/ ctx[0] === undefined && !("title" in props)) {
			console.warn("<Navbar> was created without expected prop 'title'");
		}
	}

	get title() {
		throw new Error("<Navbar>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set title(value) {
		throw new Error("<Navbar>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/Tabbar.svelte generated by Svelte v3.22.2 */

const file$2 = "src/components/Tabbar.svelte";

function create_fragment$2(ctx) {
	let div5;
	let a0;
	let div0;
	let img0;
	let img0_src_value;
	let t0;
	let div0_class_value;
	let t1;
	let a1;
	let div1;
	let img1;
	let img1_src_value;
	let t2;
	let div1_class_value;
	let t3;
	let a2;
	let div2;
	let img2;
	let img2_src_value;
	let t4;
	let div2_class_value;
	let t5;
	let a3;
	let div3;
	let img3;
	let img3_src_value;
	let t6;
	let div3_class_value;
	let t7;
	let a4;
	let div4;
	let img4;
	let img4_src_value;
	let t8;
	let div4_class_value;

	const block = {
		c: function create() {
			div5 = element("div");
			a0 = element("a");
			div0 = element("div");
			img0 = element("img");
			t0 = text("\n      Store");
			t1 = space();
			a1 = element("a");
			div1 = element("div");
			img1 = element("img");
			t2 = text("\n      Profile");
			t3 = space();
			a2 = element("a");
			div2 = element("div");
			img2 = element("img");
			t4 = text("\n      Guard");
			t5 = space();
			a3 = element("a");
			div3 = element("div");
			img3 = element("img");
			t6 = text("\n      Chat");
			t7 = space();
			a4 = element("a");
			div4 = element("div");
			img4 = element("img");
			t8 = text("\n      Support");
			this.h();
		},
		l: function claim(nodes) {
			div5 = claim_element(nodes, "DIV", { id: true, class: true });
			var div5_nodes = children(div5);
			a0 = claim_element(div5_nodes, "A", { href: true });
			var a0_nodes = children(a0);
			div0 = claim_element(a0_nodes, "DIV", { class: true });
			var div0_nodes = children(div0);
			img0 = claim_element(div0_nodes, "IMG", { src: true, class: true });
			t0 = claim_text(div0_nodes, "\n      Store");
			div0_nodes.forEach(detach_dev);
			a0_nodes.forEach(detach_dev);
			t1 = claim_space(div5_nodes);
			a1 = claim_element(div5_nodes, "A", { href: true });
			var a1_nodes = children(a1);
			div1 = claim_element(a1_nodes, "DIV", { class: true });
			var div1_nodes = children(div1);
			img1 = claim_element(div1_nodes, "IMG", { src: true, class: true });
			t2 = claim_text(div1_nodes, "\n      Profile");
			div1_nodes.forEach(detach_dev);
			a1_nodes.forEach(detach_dev);
			t3 = claim_space(div5_nodes);
			a2 = claim_element(div5_nodes, "A", { href: true });
			var a2_nodes = children(a2);
			div2 = claim_element(a2_nodes, "DIV", { class: true });
			var div2_nodes = children(div2);
			img2 = claim_element(div2_nodes, "IMG", { src: true, class: true });
			t4 = claim_text(div2_nodes, "\n      Guard");
			div2_nodes.forEach(detach_dev);
			a2_nodes.forEach(detach_dev);
			t5 = claim_space(div5_nodes);
			a3 = claim_element(div5_nodes, "A", { href: true });
			var a3_nodes = children(a3);
			div3 = claim_element(a3_nodes, "DIV", { class: true });
			var div3_nodes = children(div3);
			img3 = claim_element(div3_nodes, "IMG", { src: true, class: true });
			t6 = claim_text(div3_nodes, "\n      Chat");
			div3_nodes.forEach(detach_dev);
			a3_nodes.forEach(detach_dev);
			t7 = claim_space(div5_nodes);
			a4 = claim_element(div5_nodes, "A", { href: true });
			var a4_nodes = children(a4);
			div4 = claim_element(a4_nodes, "DIV", { class: true });
			var div4_nodes = children(div4);
			img4 = claim_element(div4_nodes, "IMG", { src: true, class: true });
			t8 = claim_text(div4_nodes, "\n      Support");
			div4_nodes.forEach(detach_dev);
			a4_nodes.forEach(detach_dev);
			div5_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			if (img0.src !== (img0_src_value = /*location*/ ctx[0] == 1
			? "store-active.svg"
			: "store.svg")) attr_dev(img0, "src", img0_src_value);

			attr_dev(img0, "class", "svelte-1paas4");
			add_location(img0, file$2, 7, 6, 146);
			attr_dev(div0, "class", div0_class_value = "tabItem " + (/*location*/ ctx[0] === 1 ? "selected" : "") + " svelte-1paas4");
			add_location(div0, file$2, 6, 4, 83);
			attr_dev(a0, "href", "store");
			add_location(a0, file$2, 5, 2, 62);

			if (img1.src !== (img1_src_value = /*location*/ ctx[0] == 2
			? "profile-active.svg"
			: "profile.svg")) attr_dev(img1, "src", img1_src_value);

			attr_dev(img1, "class", "svelte-1paas4");
			add_location(img1, file$2, 13, 6, 327);
			attr_dev(div1, "class", div1_class_value = "tabItem " + (/*location*/ ctx[0] === 2 ? "selected" : "") + " svelte-1paas4");
			add_location(div1, file$2, 12, 4, 264);
			attr_dev(a1, "href", "profile");
			add_location(a1, file$2, 11, 2, 241);

			if (img2.src !== (img2_src_value = /*location*/ ctx[0] == 3
			? "guard-active.svg"
			: "guard.svg")) attr_dev(img2, "src", img2_src_value);

			attr_dev(img2, "class", "svelte-1paas4");
			add_location(img2, file$2, 19, 6, 509);
			attr_dev(div2, "class", div2_class_value = "tabItem " + (/*location*/ ctx[0] === 3 ? "selected" : "") + " svelte-1paas4");
			add_location(div2, file$2, 18, 4, 446);
			attr_dev(a2, "href", "./");
			add_location(a2, file$2, 17, 2, 428);

			if (img3.src !== (img3_src_value = /*location*/ ctx[0] == 4
			? "chat-active.svg"
			: "chat.svg")) attr_dev(img3, "src", img3_src_value);

			attr_dev(img3, "class", "svelte-1paas4");
			add_location(img3, file$2, 25, 6, 687);
			attr_dev(div3, "class", div3_class_value = "tabItem " + (/*location*/ ctx[0] === 4 ? "selected" : "") + " svelte-1paas4");
			add_location(div3, file$2, 24, 4, 624);
			attr_dev(a3, "href", "chat");
			add_location(a3, file$2, 23, 2, 604);

			if (img4.src !== (img4_src_value = /*location*/ ctx[0] == 5
			? "support-active.svg"
			: "support.svg")) attr_dev(img4, "src", img4_src_value);

			attr_dev(img4, "class", "svelte-1paas4");
			add_location(img4, file$2, 31, 6, 865);
			attr_dev(div4, "class", div4_class_value = "tabItem " + (/*location*/ ctx[0] === 5 ? "selected" : "") + " svelte-1paas4");
			add_location(div4, file$2, 30, 4, 802);
			attr_dev(a4, "href", "support");
			add_location(a4, file$2, 29, 2, 779);
			attr_dev(div5, "id", "tabbar");
			attr_dev(div5, "class", "svelte-1paas4");
			add_location(div5, file$2, 4, 0, 42);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div5, anchor);
			append_dev(div5, a0);
			append_dev(a0, div0);
			append_dev(div0, img0);
			append_dev(div0, t0);
			append_dev(div5, t1);
			append_dev(div5, a1);
			append_dev(a1, div1);
			append_dev(div1, img1);
			append_dev(div1, t2);
			append_dev(div5, t3);
			append_dev(div5, a2);
			append_dev(a2, div2);
			append_dev(div2, img2);
			append_dev(div2, t4);
			append_dev(div5, t5);
			append_dev(div5, a3);
			append_dev(a3, div3);
			append_dev(div3, img3);
			append_dev(div3, t6);
			append_dev(div5, t7);
			append_dev(div5, a4);
			append_dev(a4, div4);
			append_dev(div4, img4);
			append_dev(div4, t8);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*location*/ 1 && img0.src !== (img0_src_value = /*location*/ ctx[0] == 1
			? "store-active.svg"
			: "store.svg")) {
				attr_dev(img0, "src", img0_src_value);
			}

			if (dirty & /*location*/ 1 && div0_class_value !== (div0_class_value = "tabItem " + (/*location*/ ctx[0] === 1 ? "selected" : "") + " svelte-1paas4")) {
				attr_dev(div0, "class", div0_class_value);
			}

			if (dirty & /*location*/ 1 && img1.src !== (img1_src_value = /*location*/ ctx[0] == 2
			? "profile-active.svg"
			: "profile.svg")) {
				attr_dev(img1, "src", img1_src_value);
			}

			if (dirty & /*location*/ 1 && div1_class_value !== (div1_class_value = "tabItem " + (/*location*/ ctx[0] === 2 ? "selected" : "") + " svelte-1paas4")) {
				attr_dev(div1, "class", div1_class_value);
			}

			if (dirty & /*location*/ 1 && img2.src !== (img2_src_value = /*location*/ ctx[0] == 3
			? "guard-active.svg"
			: "guard.svg")) {
				attr_dev(img2, "src", img2_src_value);
			}

			if (dirty & /*location*/ 1 && div2_class_value !== (div2_class_value = "tabItem " + (/*location*/ ctx[0] === 3 ? "selected" : "") + " svelte-1paas4")) {
				attr_dev(div2, "class", div2_class_value);
			}

			if (dirty & /*location*/ 1 && img3.src !== (img3_src_value = /*location*/ ctx[0] == 4
			? "chat-active.svg"
			: "chat.svg")) {
				attr_dev(img3, "src", img3_src_value);
			}

			if (dirty & /*location*/ 1 && div3_class_value !== (div3_class_value = "tabItem " + (/*location*/ ctx[0] === 4 ? "selected" : "") + " svelte-1paas4")) {
				attr_dev(div3, "class", div3_class_value);
			}

			if (dirty & /*location*/ 1 && img4.src !== (img4_src_value = /*location*/ ctx[0] == 5
			? "support-active.svg"
			: "support.svg")) {
				attr_dev(img4, "src", img4_src_value);
			}

			if (dirty & /*location*/ 1 && div4_class_value !== (div4_class_value = "tabItem " + (/*location*/ ctx[0] === 5 ? "selected" : "") + " svelte-1paas4")) {
				attr_dev(div4, "class", div4_class_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div5);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	let { location } = $$props;
	const writable_props = ["location"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Tabbar> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Tabbar", $$slots, []);

	$$self.$set = $$props => {
		if ("location" in $$props) $$invalidate(0, location = $$props.location);
	};

	$$self.$capture_state = () => ({ location });

	$$self.$inject_state = $$props => {
		if ("location" in $$props) $$invalidate(0, location = $$props.location);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [location];
}

class Tabbar extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$2, create_fragment$2, safe_not_equal, { location: 0 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Tabbar",
			options,
			id: create_fragment$2.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*location*/ ctx[0] === undefined && !("location" in props)) {
			console.warn("<Tabbar> was created without expected prop 'location'");
		}
	}

	get location() {
		throw new Error("<Tabbar>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set location(value) {
		throw new Error("<Tabbar>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

export { Navbar as N, Tabbar as T };
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
