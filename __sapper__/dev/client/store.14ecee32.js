import { S as SvelteComponentDev, i as init, s as safe_not_equal, d as dispatch_dev, v as validate_slots, e as element, t as text, a as space, c as claim_element, b as children, h as claim_text, f as detach_dev, g as claim_space, j as attr_dev, D as null_to_empty, l as add_location, m as insert_dev, n as append_dev, o as set_data_dev, p as noop, k as set_style, q as create_component, u as claim_component, w as mount_component, x as transition_in, y as transition_out, z as destroy_component, K as group_outros, L as check_outros, r as query_selector_all } from './client.6c4f76e2.js';
import { N as Navbar, T as Tabbar } from './Tabbar.677b89d5.js';

/* src/components/PriceBox.svelte generated by Svelte v3.22.2 */

const file = "src/components/PriceBox.svelte";

function create_fragment(ctx) {
	let div4;
	let div0;
	let t0;
	let t1;
	let t2;
	let div0_class_value;
	let t3;
	let div3;
	let div1;
	let t4;
	let t5;
	let div1_class_value;
	let t6;
	let div2;
	let t7;
	let t8;
	let div2_class_value;
	let div3_class_value;

	const block = {
		c: function create() {
			div4 = element("div");
			div0 = element("div");
			t0 = text("-");
			t1 = text(/*discount*/ ctx[3]);
			t2 = text("%");
			t3 = space();
			div3 = element("div");
			div1 = element("div");
			t4 = text("$");
			t5 = text(/*originalPrice*/ ctx[0]);
			t6 = space();
			div2 = element("div");
			t7 = text("$");
			t8 = text(/*reducedPrice*/ ctx[1]);
			this.h();
		},
		l: function claim(nodes) {
			div4 = claim_element(nodes, "DIV", { id: true, class: true });
			var div4_nodes = children(div4);
			div0 = claim_element(div4_nodes, "DIV", { id: true, class: true });
			var div0_nodes = children(div0);
			t0 = claim_text(div0_nodes, "-");
			t1 = claim_text(div0_nodes, /*discount*/ ctx[3]);
			t2 = claim_text(div0_nodes, "%");
			div0_nodes.forEach(detach_dev);
			t3 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { id: true, class: true });
			var div3_nodes = children(div3);
			div1 = claim_element(div3_nodes, "DIV", { id: true, class: true });
			var div1_nodes = children(div1);
			t4 = claim_text(div1_nodes, "$");
			t5 = claim_text(div1_nodes, /*originalPrice*/ ctx[0]);
			div1_nodes.forEach(detach_dev);
			t6 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { id: true, class: true });
			var div2_nodes = children(div2);
			t7 = claim_text(div2_nodes, "$");
			t8 = claim_text(div2_nodes, /*reducedPrice*/ ctx[1]);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "id", "discount");
			attr_dev(div0, "class", div0_class_value = "" + (null_to_empty(/*small*/ ctx[2] ? "discount discount--square" : "") + " svelte-nwzu5p"));
			add_location(div0, file, 11, 2, 203);
			attr_dev(div1, "id", "originalprice");
			attr_dev(div1, "class", div1_class_value = "" + (null_to_empty(/*small*/ ctx[2] ? "originalprice--square" : "") + " svelte-nwzu5p"));
			add_location(div1, file, 15, 4, 367);
			attr_dev(div2, "id", "reducedprice");
			attr_dev(div2, "class", div2_class_value = "" + (null_to_empty(/*small*/ ctx[2] ? "reducedprice--square" : "") + " svelte-nwzu5p"));
			add_location(div2, file, 18, 4, 475);
			attr_dev(div3, "id", "prices");
			attr_dev(div3, "class", div3_class_value = "" + (null_to_empty(/*small*/ ctx[2] ? "prices prices--square" : "") + " svelte-nwzu5p"));
			add_location(div3, file, 14, 2, 300);
			attr_dev(div4, "id", "pricebox");
			attr_dev(div4, "class", "svelte-nwzu5p");
			add_location(div4, file, 10, 0, 181);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div4, anchor);
			append_dev(div4, div0);
			append_dev(div0, t0);
			append_dev(div0, t1);
			append_dev(div0, t2);
			append_dev(div4, t3);
			append_dev(div4, div3);
			append_dev(div3, div1);
			append_dev(div1, t4);
			append_dev(div1, t5);
			append_dev(div3, t6);
			append_dev(div3, div2);
			append_dev(div2, t7);
			append_dev(div2, t8);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*small*/ 4 && div0_class_value !== (div0_class_value = "" + (null_to_empty(/*small*/ ctx[2] ? "discount discount--square" : "") + " svelte-nwzu5p"))) {
				attr_dev(div0, "class", div0_class_value);
			}

			if (dirty & /*originalPrice*/ 1) set_data_dev(t5, /*originalPrice*/ ctx[0]);

			if (dirty & /*small*/ 4 && div1_class_value !== (div1_class_value = "" + (null_to_empty(/*small*/ ctx[2] ? "originalprice--square" : "") + " svelte-nwzu5p"))) {
				attr_dev(div1, "class", div1_class_value);
			}

			if (dirty & /*reducedPrice*/ 2) set_data_dev(t8, /*reducedPrice*/ ctx[1]);

			if (dirty & /*small*/ 4 && div2_class_value !== (div2_class_value = "" + (null_to_empty(/*small*/ ctx[2] ? "reducedprice--square" : "") + " svelte-nwzu5p"))) {
				attr_dev(div2, "class", div2_class_value);
			}

			if (dirty & /*small*/ 4 && div3_class_value !== (div3_class_value = "" + (null_to_empty(/*small*/ ctx[2] ? "prices prices--square" : "") + " svelte-nwzu5p"))) {
				attr_dev(div3, "class", div3_class_value);
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div4);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance($$self, $$props, $$invalidate) {
	let { originalPrice } = $$props,
		{ reducedPrice } = $$props,
		{ small = false } = $$props;

	let discount = ((originalPrice - reducedPrice) * 100 / originalPrice).toFixed(0);
	const writable_props = ["originalPrice", "reducedPrice", "small"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<PriceBox> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("PriceBox", $$slots, []);

	$$self.$set = $$props => {
		if ("originalPrice" in $$props) $$invalidate(0, originalPrice = $$props.originalPrice);
		if ("reducedPrice" in $$props) $$invalidate(1, reducedPrice = $$props.reducedPrice);
		if ("small" in $$props) $$invalidate(2, small = $$props.small);
	};

	$$self.$capture_state = () => ({
		originalPrice,
		reducedPrice,
		small,
		discount
	});

	$$self.$inject_state = $$props => {
		if ("originalPrice" in $$props) $$invalidate(0, originalPrice = $$props.originalPrice);
		if ("reducedPrice" in $$props) $$invalidate(1, reducedPrice = $$props.reducedPrice);
		if ("small" in $$props) $$invalidate(2, small = $$props.small);
		if ("discount" in $$props) $$invalidate(3, discount = $$props.discount);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [originalPrice, reducedPrice, small, discount];
}

class PriceBox extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance, create_fragment, safe_not_equal, {
			originalPrice: 0,
			reducedPrice: 1,
			small: 2
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "PriceBox",
			options,
			id: create_fragment.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*originalPrice*/ ctx[0] === undefined && !("originalPrice" in props)) {
			console.warn("<PriceBox> was created without expected prop 'originalPrice'");
		}

		if (/*reducedPrice*/ ctx[1] === undefined && !("reducedPrice" in props)) {
			console.warn("<PriceBox> was created without expected prop 'reducedPrice'");
		}
	}

	get originalPrice() {
		throw new Error("<PriceBox>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set originalPrice(value) {
		throw new Error("<PriceBox>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get reducedPrice() {
		throw new Error("<PriceBox>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set reducedPrice(value) {
		throw new Error("<PriceBox>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get small() {
		throw new Error("<PriceBox>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set small(value) {
		throw new Error("<PriceBox>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/RectangleCard.svelte generated by Svelte v3.22.2 */
const file$1 = "src/components/RectangleCard.svelte";

// (19:6) {#if windows}
function create_if_block_2(ctx) {
	let img;
	let img_src_value;

	const block = {
		c: function create() {
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			img = claim_element(nodes, "IMG", { src: true, height: true });
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = "windows.svg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "height", "15px;");
			add_location(img, file$1, 19, 8, 434);
		},
		m: function mount(target, anchor) {
			insert_dev(target, img, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(img);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_2.name,
		type: "if",
		source: "(19:6) {#if windows}",
		ctx
	});

	return block;
}

// (22:6) {#if mac}
function create_if_block_1(ctx) {
	let img;
	let img_src_value;

	const block = {
		c: function create() {
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			img = claim_element(nodes, "IMG", { src: true, height: true, style: true });
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = "mac.svg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "height", "15px;");
			set_style(img, "margin-left", "4px");
			add_location(img, file$1, 22, 8, 511);
		},
		m: function mount(target, anchor) {
			insert_dev(target, img, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(img);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1.name,
		type: "if",
		source: "(22:6) {#if mac}",
		ctx
	});

	return block;
}

// (25:6) {#if steam}
function create_if_block(ctx) {
	let img;
	let img_src_value;

	const block = {
		c: function create() {
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			img = claim_element(nodes, "IMG", { src: true, height: true, style: true });
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = "steamlogo.svg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "height", "15px;");
			set_style(img, "margin-left", "4px");
			add_location(img, file$1, 25, 8, 611);
		},
		m: function mount(target, anchor) {
			insert_dev(target, img, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(img);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block.name,
		type: "if",
		source: "(25:6) {#if steam}",
		ctx
	});

	return block;
}

function create_fragment$1(ctx) {
	let div4;
	let div0;
	let t0;
	let div3;
	let div1;
	let t1;
	let t2;
	let div2;
	let t3;
	let t4;
	let current;

	const pricebox = new PriceBox({
			props: {
				originalPrice: /*originalPrice*/ ctx[4],
				reducedPrice: /*reducedPrice*/ ctx[5]
			},
			$$inline: true
		});

	let if_block0 = /*windows*/ ctx[1] && create_if_block_2(ctx);
	let if_block1 = /*mac*/ ctx[2] && create_if_block_1(ctx);
	let if_block2 = /*steam*/ ctx[3] && create_if_block(ctx);

	const block = {
		c: function create() {
			div4 = element("div");
			div0 = element("div");
			create_component(pricebox.$$.fragment);
			t0 = space();
			div3 = element("div");
			div1 = element("div");
			t1 = text("11 friends own this game");
			t2 = space();
			div2 = element("div");
			if (if_block0) if_block0.c();
			t3 = space();
			if (if_block1) if_block1.c();
			t4 = space();
			if (if_block2) if_block2.c();
			this.h();
		},
		l: function claim(nodes) {
			div4 = claim_element(nodes, "DIV", { id: true, class: true });
			var div4_nodes = children(div4);
			div0 = claim_element(div4_nodes, "DIV", { id: true, class: true, style: true });
			var div0_nodes = children(div0);
			claim_component(pricebox.$$.fragment, div0_nodes);
			div0_nodes.forEach(detach_dev);
			t0 = claim_space(div4_nodes);
			div3 = claim_element(div4_nodes, "DIV", { id: true, class: true });
			var div3_nodes = children(div3);
			div1 = claim_element(div3_nodes, "DIV", { id: true, class: true });
			var div1_nodes = children(div1);
			t1 = claim_text(div1_nodes, "11 friends own this game");
			div1_nodes.forEach(detach_dev);
			t2 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", {});
			var div2_nodes = children(div2);
			if (if_block0) if_block0.l(div2_nodes);
			t3 = claim_space(div2_nodes);
			if (if_block1) if_block1.l(div2_nodes);
			t4 = claim_space(div2_nodes);
			if (if_block2) if_block2.l(div2_nodes);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			div4_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "id", "image");
			attr_dev(div0, "class", "image svelte-1tl6par");
			set_style(div0, "background-image", "url(" + /*image*/ ctx[0] + ")");
			add_location(div0, file$1, 12, 2, 194);
			attr_dev(div1, "id", "owners");
			attr_dev(div1, "class", "svelte-1tl6par");
			add_location(div1, file$1, 16, 4, 348);
			add_location(div2, file$1, 17, 4, 400);
			attr_dev(div3, "id", "cardInfo");
			attr_dev(div3, "class", "svelte-1tl6par");
			add_location(div3, file$1, 15, 2, 324);
			attr_dev(div4, "id", "card");
			attr_dev(div4, "class", "svelte-1tl6par");
			add_location(div4, file$1, 11, 0, 176);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div4, anchor);
			append_dev(div4, div0);
			mount_component(pricebox, div0, null);
			append_dev(div4, t0);
			append_dev(div4, div3);
			append_dev(div3, div1);
			append_dev(div1, t1);
			append_dev(div3, t2);
			append_dev(div3, div2);
			if (if_block0) if_block0.m(div2, null);
			append_dev(div2, t3);
			if (if_block1) if_block1.m(div2, null);
			append_dev(div2, t4);
			if (if_block2) if_block2.m(div2, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const pricebox_changes = {};
			if (dirty & /*originalPrice*/ 16) pricebox_changes.originalPrice = /*originalPrice*/ ctx[4];
			if (dirty & /*reducedPrice*/ 32) pricebox_changes.reducedPrice = /*reducedPrice*/ ctx[5];
			pricebox.$set(pricebox_changes);

			if (!current || dirty & /*image*/ 1) {
				set_style(div0, "background-image", "url(" + /*image*/ ctx[0] + ")");
			}

			if (/*windows*/ ctx[1]) {
				if (if_block0) ; else {
					if_block0 = create_if_block_2(ctx);
					if_block0.c();
					if_block0.m(div2, t3);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			if (/*mac*/ ctx[2]) {
				if (if_block1) ; else {
					if_block1 = create_if_block_1(ctx);
					if_block1.c();
					if_block1.m(div2, t4);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (/*steam*/ ctx[3]) {
				if (if_block2) ; else {
					if_block2 = create_if_block(ctx);
					if_block2.c();
					if_block2.m(div2, null);
				}
			} else if (if_block2) {
				if_block2.d(1);
				if_block2 = null;
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(pricebox.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(pricebox.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div4);
			destroy_component(pricebox);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
			if (if_block2) if_block2.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$1.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$1($$self, $$props, $$invalidate) {
	let { image } = $$props,
		{ windows = true } = $$props,
		{ mac = false } = $$props,
		{ steam = false } = $$props,
		{ originalPrice } = $$props,
		{ reducedPrice } = $$props;

	const writable_props = ["image", "windows", "mac", "steam", "originalPrice", "reducedPrice"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<RectangleCard> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("RectangleCard", $$slots, []);

	$$self.$set = $$props => {
		if ("image" in $$props) $$invalidate(0, image = $$props.image);
		if ("windows" in $$props) $$invalidate(1, windows = $$props.windows);
		if ("mac" in $$props) $$invalidate(2, mac = $$props.mac);
		if ("steam" in $$props) $$invalidate(3, steam = $$props.steam);
		if ("originalPrice" in $$props) $$invalidate(4, originalPrice = $$props.originalPrice);
		if ("reducedPrice" in $$props) $$invalidate(5, reducedPrice = $$props.reducedPrice);
	};

	$$self.$capture_state = () => ({
		PriceBox,
		image,
		windows,
		mac,
		steam,
		originalPrice,
		reducedPrice
	});

	$$self.$inject_state = $$props => {
		if ("image" in $$props) $$invalidate(0, image = $$props.image);
		if ("windows" in $$props) $$invalidate(1, windows = $$props.windows);
		if ("mac" in $$props) $$invalidate(2, mac = $$props.mac);
		if ("steam" in $$props) $$invalidate(3, steam = $$props.steam);
		if ("originalPrice" in $$props) $$invalidate(4, originalPrice = $$props.originalPrice);
		if ("reducedPrice" in $$props) $$invalidate(5, reducedPrice = $$props.reducedPrice);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [image, windows, mac, steam, originalPrice, reducedPrice];
}

class RectangleCard extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance$1, create_fragment$1, safe_not_equal, {
			image: 0,
			windows: 1,
			mac: 2,
			steam: 3,
			originalPrice: 4,
			reducedPrice: 5
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "RectangleCard",
			options,
			id: create_fragment$1.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*image*/ ctx[0] === undefined && !("image" in props)) {
			console.warn("<RectangleCard> was created without expected prop 'image'");
		}

		if (/*originalPrice*/ ctx[4] === undefined && !("originalPrice" in props)) {
			console.warn("<RectangleCard> was created without expected prop 'originalPrice'");
		}

		if (/*reducedPrice*/ ctx[5] === undefined && !("reducedPrice" in props)) {
			console.warn("<RectangleCard> was created without expected prop 'reducedPrice'");
		}
	}

	get image() {
		throw new Error("<RectangleCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set image(value) {
		throw new Error("<RectangleCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get windows() {
		throw new Error("<RectangleCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set windows(value) {
		throw new Error("<RectangleCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get mac() {
		throw new Error("<RectangleCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set mac(value) {
		throw new Error("<RectangleCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get steam() {
		throw new Error("<RectangleCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set steam(value) {
		throw new Error("<RectangleCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get originalPrice() {
		throw new Error("<RectangleCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set originalPrice(value) {
		throw new Error("<RectangleCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get reducedPrice() {
		throw new Error("<RectangleCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set reducedPrice(value) {
		throw new Error("<RectangleCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/SquareCard.svelte generated by Svelte v3.22.2 */
const file$2 = "src/components/SquareCard.svelte";

// (19:6) {#if windows}
function create_if_block_2$1(ctx) {
	let img;
	let img_src_value;

	const block = {
		c: function create() {
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			img = claim_element(nodes, "IMG", { src: true, height: true });
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = "windows.svg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "height", "12px;");
			add_location(img, file$2, 19, 8, 456);
		},
		m: function mount(target, anchor) {
			insert_dev(target, img, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(img);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_2$1.name,
		type: "if",
		source: "(19:6) {#if windows}",
		ctx
	});

	return block;
}

// (22:6) {#if mac}
function create_if_block_1$1(ctx) {
	let img;
	let img_src_value;

	const block = {
		c: function create() {
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			img = claim_element(nodes, "IMG", { src: true, height: true, style: true });
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = "mac.svg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "height", "12px;");
			set_style(img, "margin-left", "4px");
			add_location(img, file$2, 22, 8, 533);
		},
		m: function mount(target, anchor) {
			insert_dev(target, img, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(img);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1$1.name,
		type: "if",
		source: "(22:6) {#if mac}",
		ctx
	});

	return block;
}

// (25:6) {#if steam}
function create_if_block$1(ctx) {
	let img;
	let img_src_value;

	const block = {
		c: function create() {
			img = element("img");
			this.h();
		},
		l: function claim(nodes) {
			img = claim_element(nodes, "IMG", { src: true, height: true, style: true });
			this.h();
		},
		h: function hydrate() {
			if (img.src !== (img_src_value = "steamlogo.svg")) attr_dev(img, "src", img_src_value);
			attr_dev(img, "height", "12px;");
			set_style(img, "margin-left", "4px");
			add_location(img, file$2, 25, 8, 633);
		},
		m: function mount(target, anchor) {
			insert_dev(target, img, anchor);
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(img);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$1.name,
		type: "if",
		source: "(25:6) {#if steam}",
		ctx
	});

	return block;
}

function create_fragment$2(ctx) {
	let div3;
	let div0;
	let t0;
	let div2;
	let div1;
	let t1;
	let t2;
	let current;

	const pricebox = new PriceBox({
			props: {
				originalPrice: /*originalPrice*/ ctx[4],
				reducedPrice: /*reducedPrice*/ ctx[5],
				small: true
			},
			$$inline: true
		});

	let if_block0 = /*windows*/ ctx[1] && create_if_block_2$1(ctx);
	let if_block1 = /*mac*/ ctx[2] && create_if_block_1$1(ctx);
	let if_block2 = /*steam*/ ctx[3] && create_if_block$1(ctx);

	const block = {
		c: function create() {
			div3 = element("div");
			div0 = element("div");
			create_component(pricebox.$$.fragment);
			t0 = space();
			div2 = element("div");
			div1 = element("div");
			if (if_block0) if_block0.c();
			t1 = space();
			if (if_block1) if_block1.c();
			t2 = space();
			if (if_block2) if_block2.c();
			this.h();
		},
		l: function claim(nodes) {
			div3 = claim_element(nodes, "DIV", { id: true, class: true });
			var div3_nodes = children(div3);
			div0 = claim_element(div3_nodes, "DIV", { id: true, class: true, style: true });
			var div0_nodes = children(div0);
			claim_component(pricebox.$$.fragment, div0_nodes);
			div0_nodes.forEach(detach_dev);
			t0 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { id: true, class: true });
			var div2_nodes = children(div2);
			div1 = claim_element(div2_nodes, "DIV", {});
			var div1_nodes = children(div1);
			if (if_block0) if_block0.l(div1_nodes);
			t1 = claim_space(div1_nodes);
			if (if_block1) if_block1.l(div1_nodes);
			t2 = claim_space(div1_nodes);
			if (if_block2) if_block2.l(div1_nodes);
			div1_nodes.forEach(detach_dev);
			div2_nodes.forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "id", "image");
			attr_dev(div0, "class", "image svelte-1toy9u1");
			set_style(div0, "background-image", "url(" + /*image*/ ctx[0] + ")");
			add_location(div0, file$2, 12, 2, 194);
			add_location(div1, file$2, 17, 4, 422);
			attr_dev(div2, "id", "cardInfo");
			attr_dev(div2, "class", "svelte-1toy9u1");
			add_location(div2, file$2, 15, 2, 337);
			attr_dev(div3, "id", "card");
			attr_dev(div3, "class", "svelte-1toy9u1");
			add_location(div3, file$2, 11, 0, 176);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div3, anchor);
			append_dev(div3, div0);
			mount_component(pricebox, div0, null);
			append_dev(div3, t0);
			append_dev(div3, div2);
			append_dev(div2, div1);
			if (if_block0) if_block0.m(div1, null);
			append_dev(div1, t1);
			if (if_block1) if_block1.m(div1, null);
			append_dev(div1, t2);
			if (if_block2) if_block2.m(div1, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			const pricebox_changes = {};
			if (dirty & /*originalPrice*/ 16) pricebox_changes.originalPrice = /*originalPrice*/ ctx[4];
			if (dirty & /*reducedPrice*/ 32) pricebox_changes.reducedPrice = /*reducedPrice*/ ctx[5];
			pricebox.$set(pricebox_changes);

			if (!current || dirty & /*image*/ 1) {
				set_style(div0, "background-image", "url(" + /*image*/ ctx[0] + ")");
			}

			if (/*windows*/ ctx[1]) {
				if (if_block0) ; else {
					if_block0 = create_if_block_2$1(ctx);
					if_block0.c();
					if_block0.m(div1, t1);
				}
			} else if (if_block0) {
				if_block0.d(1);
				if_block0 = null;
			}

			if (/*mac*/ ctx[2]) {
				if (if_block1) ; else {
					if_block1 = create_if_block_1$1(ctx);
					if_block1.c();
					if_block1.m(div1, t2);
				}
			} else if (if_block1) {
				if_block1.d(1);
				if_block1 = null;
			}

			if (/*steam*/ ctx[3]) {
				if (if_block2) ; else {
					if_block2 = create_if_block$1(ctx);
					if_block2.c();
					if_block2.m(div1, null);
				}
			} else if (if_block2) {
				if_block2.d(1);
				if_block2 = null;
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(pricebox.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(pricebox.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div3);
			destroy_component(pricebox);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
			if (if_block2) if_block2.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$2.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$2($$self, $$props, $$invalidate) {
	let { image } = $$props,
		{ windows = true } = $$props,
		{ mac = false } = $$props,
		{ steam = false } = $$props,
		{ originalPrice } = $$props,
		{ reducedPrice } = $$props;

	const writable_props = ["image", "windows", "mac", "steam", "originalPrice", "reducedPrice"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<SquareCard> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("SquareCard", $$slots, []);

	$$self.$set = $$props => {
		if ("image" in $$props) $$invalidate(0, image = $$props.image);
		if ("windows" in $$props) $$invalidate(1, windows = $$props.windows);
		if ("mac" in $$props) $$invalidate(2, mac = $$props.mac);
		if ("steam" in $$props) $$invalidate(3, steam = $$props.steam);
		if ("originalPrice" in $$props) $$invalidate(4, originalPrice = $$props.originalPrice);
		if ("reducedPrice" in $$props) $$invalidate(5, reducedPrice = $$props.reducedPrice);
	};

	$$self.$capture_state = () => ({
		PriceBox,
		image,
		windows,
		mac,
		steam,
		originalPrice,
		reducedPrice
	});

	$$self.$inject_state = $$props => {
		if ("image" in $$props) $$invalidate(0, image = $$props.image);
		if ("windows" in $$props) $$invalidate(1, windows = $$props.windows);
		if ("mac" in $$props) $$invalidate(2, mac = $$props.mac);
		if ("steam" in $$props) $$invalidate(3, steam = $$props.steam);
		if ("originalPrice" in $$props) $$invalidate(4, originalPrice = $$props.originalPrice);
		if ("reducedPrice" in $$props) $$invalidate(5, reducedPrice = $$props.reducedPrice);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [image, windows, mac, steam, originalPrice, reducedPrice];
}

class SquareCard extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance$2, create_fragment$2, safe_not_equal, {
			image: 0,
			windows: 1,
			mac: 2,
			steam: 3,
			originalPrice: 4,
			reducedPrice: 5
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "SquareCard",
			options,
			id: create_fragment$2.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*image*/ ctx[0] === undefined && !("image" in props)) {
			console.warn("<SquareCard> was created without expected prop 'image'");
		}

		if (/*originalPrice*/ ctx[4] === undefined && !("originalPrice" in props)) {
			console.warn("<SquareCard> was created without expected prop 'originalPrice'");
		}

		if (/*reducedPrice*/ ctx[5] === undefined && !("reducedPrice" in props)) {
			console.warn("<SquareCard> was created without expected prop 'reducedPrice'");
		}
	}

	get image() {
		throw new Error("<SquareCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set image(value) {
		throw new Error("<SquareCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get windows() {
		throw new Error("<SquareCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set windows(value) {
		throw new Error("<SquareCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get mac() {
		throw new Error("<SquareCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set mac(value) {
		throw new Error("<SquareCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get steam() {
		throw new Error("<SquareCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set steam(value) {
		throw new Error("<SquareCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get originalPrice() {
		throw new Error("<SquareCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set originalPrice(value) {
		throw new Error("<SquareCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get reducedPrice() {
		throw new Error("<SquareCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set reducedPrice(value) {
		throw new Error("<SquareCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/StripCard.svelte generated by Svelte v3.22.2 */

const file$3 = "src/components/StripCard.svelte";

function create_fragment$3(ctx) {
	let div3;
	let div1;
	let div0;
	let t0;
	let t1;
	let div2;

	const block = {
		c: function create() {
			div3 = element("div");
			div1 = element("div");
			div0 = element("div");
			t0 = text(/*genre*/ ctx[1]);
			t1 = space();
			div2 = element("div");
			this.h();
		},
		l: function claim(nodes) {
			div3 = claim_element(nodes, "DIV", { id: true, class: true });
			var div3_nodes = children(div3);
			div1 = claim_element(div3_nodes, "DIV", { id: true, class: true, style: true });
			var div1_nodes = children(div1);
			div0 = claim_element(div1_nodes, "DIV", { id: true, class: true });
			var div0_nodes = children(div0);
			t0 = claim_text(div0_nodes, /*genre*/ ctx[1]);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			t1 = claim_space(div3_nodes);
			div2 = claim_element(div3_nodes, "DIV", { id: true });
			children(div2).forEach(detach_dev);
			div3_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(div0, "id", "imageController");
			attr_dev(div0, "class", "svelte-1r4wzwv");
			add_location(div0, file$3, 6, 4, 138);
			attr_dev(div1, "id", "image");
			attr_dev(div1, "class", "image svelte-1r4wzwv");
			set_style(div1, "background-image", "url(" + /*image*/ ctx[0] + ")");
			add_location(div1, file$3, 5, 2, 64);
			attr_dev(div2, "id", "cardInfo");
			add_location(div2, file$3, 8, 2, 189);
			attr_dev(div3, "id", "card");
			attr_dev(div3, "class", "svelte-1r4wzwv");
			add_location(div3, file$3, 4, 0, 46);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div3, anchor);
			append_dev(div3, div1);
			append_dev(div1, div0);
			append_dev(div0, t0);
			append_dev(div3, t1);
			append_dev(div3, div2);
		},
		p: function update(ctx, [dirty]) {
			if (dirty & /*genre*/ 2) set_data_dev(t0, /*genre*/ ctx[1]);

			if (dirty & /*image*/ 1) {
				set_style(div1, "background-image", "url(" + /*image*/ ctx[0] + ")");
			}
		},
		i: noop,
		o: noop,
		d: function destroy(detaching) {
			if (detaching) detach_dev(div3);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$3.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$3($$self, $$props, $$invalidate) {
	let { image } = $$props, { genre } = $$props;
	const writable_props = ["image", "genre"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<StripCard> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("StripCard", $$slots, []);

	$$self.$set = $$props => {
		if ("image" in $$props) $$invalidate(0, image = $$props.image);
		if ("genre" in $$props) $$invalidate(1, genre = $$props.genre);
	};

	$$self.$capture_state = () => ({ image, genre });

	$$self.$inject_state = $$props => {
		if ("image" in $$props) $$invalidate(0, image = $$props.image);
		if ("genre" in $$props) $$invalidate(1, genre = $$props.genre);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [image, genre];
}

class StripCard extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$3, create_fragment$3, safe_not_equal, { image: 0, genre: 1 });

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "StripCard",
			options,
			id: create_fragment$3.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*image*/ ctx[0] === undefined && !("image" in props)) {
			console.warn("<StripCard> was created without expected prop 'image'");
		}

		if (/*genre*/ ctx[1] === undefined && !("genre" in props)) {
			console.warn("<StripCard> was created without expected prop 'genre'");
		}
	}

	get image() {
		throw new Error("<StripCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set image(value) {
		throw new Error("<StripCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get genre() {
		throw new Error("<StripCard>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set genre(value) {
		throw new Error("<StripCard>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/components/StoreSection.svelte generated by Svelte v3.22.2 */
const file$4 = "src/components/StoreSection.svelte";

// (17:4) {#if rectangleCard}
function create_if_block_2$2(ctx) {
	let t0;
	let t1;
	let t2;
	let t3;
	let t4;
	let current;

	const rectanglecard0 = new RectangleCard({
			props: {
				image: "https://www.psu.com/wp/wp-content/uploads/2019/07/Cyberpunk-2077.jpg",
				originalPrice: "69.99",
				reducedPrice: "59.99"
			},
			$$inline: true
		});

	const rectanglecard1 = new RectangleCard({
			props: {
				image: "https://cdn.arstechnica.net/wp-content/uploads/2019/10/outer-worlds-listing.png",
				originalPrice: "69.99",
				reducedPrice: "59.99"
			},
			$$inline: true
		});

	const rectanglecard2 = new RectangleCard({
			props: {
				image: "https://i.ytimg.com/vi/eaW0tYpxyp0/maxresdefault.jpg",
				originalPrice: "69.99",
				reducedPrice: "59.99"
			},
			$$inline: true
		});

	const rectanglecard3 = new RectangleCard({
			props: {
				image: "https://steamcdn-a.akamaihd.net/steam/apps/374320/capsule_616x353.jpg",
				originalPrice: "69.99",
				reducedPrice: "59.99"
			},
			$$inline: true
		});

	const rectanglecard4 = new RectangleCard({
			props: {
				image: "https://steam.cryotank.net/wp-content/gallery/ori/Ori-01-HD.png",
				mac: "true",
				originalPrice: "69.99",
				reducedPrice: "59.99"
			},
			$$inline: true
		});

	const rectanglecard5 = new RectangleCard({
			props: {
				image: "https://i.ytimg.com/vi/2enbYOMtR4I/maxresdefault.jpg",
				originalPrice: "69.99",
				reducedPrice: "59.99"
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(rectanglecard0.$$.fragment);
			t0 = space();
			create_component(rectanglecard1.$$.fragment);
			t1 = space();
			create_component(rectanglecard2.$$.fragment);
			t2 = space();
			create_component(rectanglecard3.$$.fragment);
			t3 = space();
			create_component(rectanglecard4.$$.fragment);
			t4 = space();
			create_component(rectanglecard5.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(rectanglecard0.$$.fragment, nodes);
			t0 = claim_space(nodes);
			claim_component(rectanglecard1.$$.fragment, nodes);
			t1 = claim_space(nodes);
			claim_component(rectanglecard2.$$.fragment, nodes);
			t2 = claim_space(nodes);
			claim_component(rectanglecard3.$$.fragment, nodes);
			t3 = claim_space(nodes);
			claim_component(rectanglecard4.$$.fragment, nodes);
			t4 = claim_space(nodes);
			claim_component(rectanglecard5.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(rectanglecard0, target, anchor);
			insert_dev(target, t0, anchor);
			mount_component(rectanglecard1, target, anchor);
			insert_dev(target, t1, anchor);
			mount_component(rectanglecard2, target, anchor);
			insert_dev(target, t2, anchor);
			mount_component(rectanglecard3, target, anchor);
			insert_dev(target, t3, anchor);
			mount_component(rectanglecard4, target, anchor);
			insert_dev(target, t4, anchor);
			mount_component(rectanglecard5, target, anchor);
			current = true;
		},
		i: function intro(local) {
			if (current) return;
			transition_in(rectanglecard0.$$.fragment, local);
			transition_in(rectanglecard1.$$.fragment, local);
			transition_in(rectanglecard2.$$.fragment, local);
			transition_in(rectanglecard3.$$.fragment, local);
			transition_in(rectanglecard4.$$.fragment, local);
			transition_in(rectanglecard5.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(rectanglecard0.$$.fragment, local);
			transition_out(rectanglecard1.$$.fragment, local);
			transition_out(rectanglecard2.$$.fragment, local);
			transition_out(rectanglecard3.$$.fragment, local);
			transition_out(rectanglecard4.$$.fragment, local);
			transition_out(rectanglecard5.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(rectanglecard0, detaching);
			if (detaching) detach_dev(t0);
			destroy_component(rectanglecard1, detaching);
			if (detaching) detach_dev(t1);
			destroy_component(rectanglecard2, detaching);
			if (detaching) detach_dev(t2);
			destroy_component(rectanglecard3, detaching);
			if (detaching) detach_dev(t3);
			destroy_component(rectanglecard4, detaching);
			if (detaching) detach_dev(t4);
			destroy_component(rectanglecard5, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_2$2.name,
		type: "if",
		source: "(17:4) {#if rectangleCard}",
		ctx
	});

	return block;
}

// (44:4) {#if squareCard}
function create_if_block_1$2(ctx) {
	let t0;
	let t1;
	let t2;
	let t3;
	let current;

	const squarecard0 = new SquareCard({
			props: {
				image: "https://lh3.googleusercontent.com/caNRdVjHrAC8AXjQwNp4u0FzK2xwKTMC--MYdb8xXNeCinjwQOF8EqSOcYCC3RFBdgjd",
				mac: "true",
				steam: "true",
				originalPrice: "69.99",
				reducedPrice: "59.99"
			},
			$$inline: true
		});

	const squarecard1 = new SquareCard({
			props: {
				image: "https://www.androidpolice.com/wp-content/uploads/2018/10/81LJeCDylML.jpg",
				mac: "true",
				steam: "true",
				originalPrice: "69.99",
				reducedPrice: "59.99"
			},
			$$inline: true
		});

	const squarecard2 = new SquareCard({
			props: {
				image: "https://encrypted-tbn0.gstatic.com/images?q=tbn%3AANd9GcQsrSn4-vAw6oUWmYryVBtEnTUUd6-5rCQdzS1p4Hik-dLxOnOz&usqp=CAU",
				mac: "true",
				steam: "true",
				originalPrice: "69.99",
				reducedPrice: "59.99"
			},
			$$inline: true
		});

	const squarecard3 = new SquareCard({
			props: {
				image: "https://i.ytimg.com/vi/gvECQlxrhbw/maxresdefault.jpg",
				mac: "true",
				originalPrice: "69.99",
				reducedPrice: "59.99"
			},
			$$inline: true
		});

	const squarecard4 = new SquareCard({
			props: {
				image: "https://images-na.ssl-images-amazon.com/images/I/71p9r+IRobL.jpg",
				mac: "true",
				originalPrice: "69.99",
				reducedPrice: "59.99"
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(squarecard0.$$.fragment);
			t0 = space();
			create_component(squarecard1.$$.fragment);
			t1 = space();
			create_component(squarecard2.$$.fragment);
			t2 = space();
			create_component(squarecard3.$$.fragment);
			t3 = space();
			create_component(squarecard4.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(squarecard0.$$.fragment, nodes);
			t0 = claim_space(nodes);
			claim_component(squarecard1.$$.fragment, nodes);
			t1 = claim_space(nodes);
			claim_component(squarecard2.$$.fragment, nodes);
			t2 = claim_space(nodes);
			claim_component(squarecard3.$$.fragment, nodes);
			t3 = claim_space(nodes);
			claim_component(squarecard4.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(squarecard0, target, anchor);
			insert_dev(target, t0, anchor);
			mount_component(squarecard1, target, anchor);
			insert_dev(target, t1, anchor);
			mount_component(squarecard2, target, anchor);
			insert_dev(target, t2, anchor);
			mount_component(squarecard3, target, anchor);
			insert_dev(target, t3, anchor);
			mount_component(squarecard4, target, anchor);
			current = true;
		},
		i: function intro(local) {
			if (current) return;
			transition_in(squarecard0.$$.fragment, local);
			transition_in(squarecard1.$$.fragment, local);
			transition_in(squarecard2.$$.fragment, local);
			transition_in(squarecard3.$$.fragment, local);
			transition_in(squarecard4.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(squarecard0.$$.fragment, local);
			transition_out(squarecard1.$$.fragment, local);
			transition_out(squarecard2.$$.fragment, local);
			transition_out(squarecard3.$$.fragment, local);
			transition_out(squarecard4.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(squarecard0, detaching);
			if (detaching) detach_dev(t0);
			destroy_component(squarecard1, detaching);
			if (detaching) detach_dev(t1);
			destroy_component(squarecard2, detaching);
			if (detaching) detach_dev(t2);
			destroy_component(squarecard3, detaching);
			if (detaching) detach_dev(t3);
			destroy_component(squarecard4, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block_1$2.name,
		type: "if",
		source: "(44:4) {#if squareCard}",
		ctx
	});

	return block;
}

// (74:4) {#if stripCard}
function create_if_block$2(ctx) {
	let t0;
	let t1;
	let t2;
	let t3;
	let current;

	const stripcard0 = new StripCard({
			props: {
				genre: "Indie",
				image: "https://venturebeat.com/wp-content/uploads/2012/03/journey-1.jpg?w=1200&strip=all"
			},
			$$inline: true
		});

	const stripcard1 = new StripCard({
			props: {
				genre: "Action",
				image: "https://store-images.s-microsoft.com/image/apps.38656.69038865179152125.af885fa8-7b94-47b1-be3a-d2ab6af95a6a.af83131f-d4dc-4d47-a84d-25aab92a5e5b?mode=scale&q=90&h=1080&w=1920"
			},
			$$inline: true
		});

	const stripcard2 = new StripCard({
			props: {
				genre: "Adventure",
				image: "https://assets1.ignimgs.com/2020/03/24/ign-doom-eternal-complete-review-blogroll-1585092832291.jpg"
			},
			$$inline: true
		});

	const stripcard3 = new StripCard({
			props: {
				genre: "Multiplayer",
				image: "https://steamcdn-a.akamaihd.net/apps/dota2/images/blog/play/dota_heroes.png"
			},
			$$inline: true
		});

	const stripcard4 = new StripCard({
			props: {
				genre: "Horror",
				image: "https://i2.wp.com/tecake.com/wp-content/uploads/2020/04/4L2MLiPnTT5hMHbCqgyjAc.jpg?fit=1920%2C1080&ssl=1"
			},
			$$inline: true
		});

	const block = {
		c: function create() {
			create_component(stripcard0.$$.fragment);
			t0 = space();
			create_component(stripcard1.$$.fragment);
			t1 = space();
			create_component(stripcard2.$$.fragment);
			t2 = space();
			create_component(stripcard3.$$.fragment);
			t3 = space();
			create_component(stripcard4.$$.fragment);
		},
		l: function claim(nodes) {
			claim_component(stripcard0.$$.fragment, nodes);
			t0 = claim_space(nodes);
			claim_component(stripcard1.$$.fragment, nodes);
			t1 = claim_space(nodes);
			claim_component(stripcard2.$$.fragment, nodes);
			t2 = claim_space(nodes);
			claim_component(stripcard3.$$.fragment, nodes);
			t3 = claim_space(nodes);
			claim_component(stripcard4.$$.fragment, nodes);
		},
		m: function mount(target, anchor) {
			mount_component(stripcard0, target, anchor);
			insert_dev(target, t0, anchor);
			mount_component(stripcard1, target, anchor);
			insert_dev(target, t1, anchor);
			mount_component(stripcard2, target, anchor);
			insert_dev(target, t2, anchor);
			mount_component(stripcard3, target, anchor);
			insert_dev(target, t3, anchor);
			mount_component(stripcard4, target, anchor);
			current = true;
		},
		i: function intro(local) {
			if (current) return;
			transition_in(stripcard0.$$.fragment, local);
			transition_in(stripcard1.$$.fragment, local);
			transition_in(stripcard2.$$.fragment, local);
			transition_in(stripcard3.$$.fragment, local);
			transition_in(stripcard4.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(stripcard0.$$.fragment, local);
			transition_out(stripcard1.$$.fragment, local);
			transition_out(stripcard2.$$.fragment, local);
			transition_out(stripcard3.$$.fragment, local);
			transition_out(stripcard4.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			destroy_component(stripcard0, detaching);
			if (detaching) detach_dev(t0);
			destroy_component(stripcard1, detaching);
			if (detaching) detach_dev(t1);
			destroy_component(stripcard2, detaching);
			if (detaching) detach_dev(t2);
			destroy_component(stripcard3, detaching);
			if (detaching) detach_dev(t3);
			destroy_component(stripcard4, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_if_block$2.name,
		type: "if",
		source: "(74:4) {#if stripCard}",
		ctx
	});

	return block;
}

function create_fragment$4(ctx) {
	let div1;
	let h6;
	let t0;
	let t1;
	let h3;
	let t2;
	let t3;
	let div0;
	let t4;
	let t5;
	let current;
	let if_block0 = /*rectangleCard*/ ctx[2] && create_if_block_2$2(ctx);
	let if_block1 = /*squareCard*/ ctx[3] && create_if_block_1$2(ctx);
	let if_block2 = /*stripCard*/ ctx[4] && create_if_block$2(ctx);

	const block = {
		c: function create() {
			div1 = element("div");
			h6 = element("h6");
			t0 = text(/*tag*/ ctx[0]);
			t1 = space();
			h3 = element("h3");
			t2 = text(/*heading*/ ctx[1]);
			t3 = space();
			div0 = element("div");
			if (if_block0) if_block0.c();
			t4 = space();
			if (if_block1) if_block1.c();
			t5 = space();
			if (if_block2) if_block2.c();
			this.h();
		},
		l: function claim(nodes) {
			div1 = claim_element(nodes, "DIV", { id: true, class: true });
			var div1_nodes = children(div1);
			h6 = claim_element(div1_nodes, "H6", { class: true });
			var h6_nodes = children(h6);
			t0 = claim_text(h6_nodes, /*tag*/ ctx[0]);
			h6_nodes.forEach(detach_dev);
			t1 = claim_space(div1_nodes);
			h3 = claim_element(div1_nodes, "H3", { class: true });
			var h3_nodes = children(h3);
			t2 = claim_text(h3_nodes, /*heading*/ ctx[1]);
			h3_nodes.forEach(detach_dev);
			t3 = claim_space(div1_nodes);
			div0 = claim_element(div1_nodes, "DIV", { id: true, class: true });
			var div0_nodes = children(div0);
			if (if_block0) if_block0.l(div0_nodes);
			t4 = claim_space(div0_nodes);
			if (if_block1) if_block1.l(div0_nodes);
			t5 = claim_space(div0_nodes);
			if (if_block2) if_block2.l(div0_nodes);
			div0_nodes.forEach(detach_dev);
			div1_nodes.forEach(detach_dev);
			this.h();
		},
		h: function hydrate() {
			attr_dev(h6, "class", "svelte-1bqqa9q");
			add_location(h6, file$4, 13, 2, 332);
			attr_dev(h3, "class", "svelte-1bqqa9q");
			add_location(h3, file$4, 14, 2, 349);
			attr_dev(div0, "id", "spotlight");
			attr_dev(div0, "class", "svelte-1bqqa9q");
			add_location(div0, file$4, 15, 2, 370);
			attr_dev(div1, "id", "section");
			attr_dev(div1, "class", "svelte-1bqqa9q");
			add_location(div1, file$4, 12, 0, 311);
		},
		m: function mount(target, anchor) {
			insert_dev(target, div1, anchor);
			append_dev(div1, h6);
			append_dev(h6, t0);
			append_dev(div1, t1);
			append_dev(div1, h3);
			append_dev(h3, t2);
			append_dev(div1, t3);
			append_dev(div1, div0);
			if (if_block0) if_block0.m(div0, null);
			append_dev(div0, t4);
			if (if_block1) if_block1.m(div0, null);
			append_dev(div0, t5);
			if (if_block2) if_block2.m(div0, null);
			current = true;
		},
		p: function update(ctx, [dirty]) {
			if (!current || dirty & /*tag*/ 1) set_data_dev(t0, /*tag*/ ctx[0]);
			if (!current || dirty & /*heading*/ 2) set_data_dev(t2, /*heading*/ ctx[1]);

			if (/*rectangleCard*/ ctx[2]) {
				if (if_block0) {
					if (dirty & /*rectangleCard*/ 4) {
						transition_in(if_block0, 1);
					}
				} else {
					if_block0 = create_if_block_2$2(ctx);
					if_block0.c();
					transition_in(if_block0, 1);
					if_block0.m(div0, t4);
				}
			} else if (if_block0) {
				group_outros();

				transition_out(if_block0, 1, 1, () => {
					if_block0 = null;
				});

				check_outros();
			}

			if (/*squareCard*/ ctx[3]) {
				if (if_block1) {
					if (dirty & /*squareCard*/ 8) {
						transition_in(if_block1, 1);
					}
				} else {
					if_block1 = create_if_block_1$2(ctx);
					if_block1.c();
					transition_in(if_block1, 1);
					if_block1.m(div0, t5);
				}
			} else if (if_block1) {
				group_outros();

				transition_out(if_block1, 1, 1, () => {
					if_block1 = null;
				});

				check_outros();
			}

			if (/*stripCard*/ ctx[4]) {
				if (if_block2) {
					if (dirty & /*stripCard*/ 16) {
						transition_in(if_block2, 1);
					}
				} else {
					if_block2 = create_if_block$2(ctx);
					if_block2.c();
					transition_in(if_block2, 1);
					if_block2.m(div0, null);
				}
			} else if (if_block2) {
				group_outros();

				transition_out(if_block2, 1, 1, () => {
					if_block2 = null;
				});

				check_outros();
			}
		},
		i: function intro(local) {
			if (current) return;
			transition_in(if_block0);
			transition_in(if_block1);
			transition_in(if_block2);
			current = true;
		},
		o: function outro(local) {
			transition_out(if_block0);
			transition_out(if_block1);
			transition_out(if_block2);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(div1);
			if (if_block0) if_block0.d();
			if (if_block1) if_block1.d();
			if (if_block2) if_block2.d();
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$4.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$4($$self, $$props, $$invalidate) {
	let { tag = "" } = $$props,
		{ heading } = $$props,
		{ rectangleCard = false } = $$props,
		{ squareCard = false } = $$props,
		{ stripCard = false } = $$props;

	const writable_props = ["tag", "heading", "rectangleCard", "squareCard", "stripCard"];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<StoreSection> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("StoreSection", $$slots, []);

	$$self.$set = $$props => {
		if ("tag" in $$props) $$invalidate(0, tag = $$props.tag);
		if ("heading" in $$props) $$invalidate(1, heading = $$props.heading);
		if ("rectangleCard" in $$props) $$invalidate(2, rectangleCard = $$props.rectangleCard);
		if ("squareCard" in $$props) $$invalidate(3, squareCard = $$props.squareCard);
		if ("stripCard" in $$props) $$invalidate(4, stripCard = $$props.stripCard);
	};

	$$self.$capture_state = () => ({
		RectangleCard,
		SquareCard,
		StripCard,
		tag,
		heading,
		rectangleCard,
		squareCard,
		stripCard
	});

	$$self.$inject_state = $$props => {
		if ("tag" in $$props) $$invalidate(0, tag = $$props.tag);
		if ("heading" in $$props) $$invalidate(1, heading = $$props.heading);
		if ("rectangleCard" in $$props) $$invalidate(2, rectangleCard = $$props.rectangleCard);
		if ("squareCard" in $$props) $$invalidate(3, squareCard = $$props.squareCard);
		if ("stripCard" in $$props) $$invalidate(4, stripCard = $$props.stripCard);
	};

	if ($$props && "$$inject" in $$props) {
		$$self.$inject_state($$props.$$inject);
	}

	return [tag, heading, rectangleCard, squareCard, stripCard];
}

class StoreSection extends SvelteComponentDev {
	constructor(options) {
		super(options);

		init(this, options, instance$4, create_fragment$4, safe_not_equal, {
			tag: 0,
			heading: 1,
			rectangleCard: 2,
			squareCard: 3,
			stripCard: 4
		});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "StoreSection",
			options,
			id: create_fragment$4.name
		});

		const { ctx } = this.$$;
		const props = options.props || {};

		if (/*heading*/ ctx[1] === undefined && !("heading" in props)) {
			console.warn("<StoreSection> was created without expected prop 'heading'");
		}
	}

	get tag() {
		throw new Error("<StoreSection>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set tag(value) {
		throw new Error("<StoreSection>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get heading() {
		throw new Error("<StoreSection>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set heading(value) {
		throw new Error("<StoreSection>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get rectangleCard() {
		throw new Error("<StoreSection>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set rectangleCard(value) {
		throw new Error("<StoreSection>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get squareCard() {
		throw new Error("<StoreSection>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set squareCard(value) {
		throw new Error("<StoreSection>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	get stripCard() {
		throw new Error("<StoreSection>: Props cannot be read directly from the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}

	set stripCard(value) {
		throw new Error("<StoreSection>: Props cannot be set directly on the component instance unless compiling with 'accessors: true' or '<svelte:options accessors/>'");
	}
}

/* src/routes/store.svelte generated by Svelte v3.22.2 */
const file$5 = "src/routes/store.svelte";

function create_fragment$5(ctx) {
	let t0;
	let t1;
	let div;
	let t2;
	let t3;
	let t4;
	let current;

	const navbar = new Navbar({
			props: { title: "Store" },
			$$inline: true
		});

	const storesection0 = new StoreSection({
			props: {
				tag: "Special Offers",
				heading: "Midnight Madness",
				rectangleCard: "true"
			},
			$$inline: true
		});

	const storesection1 = new StoreSection({
			props: {
				heading: "Featured & Recommended",
				squareCard: "true"
			},
			$$inline: true
		});

	const storesection2 = new StoreSection({
			props: { heading: "Tags", stripCard: "true" },
			$$inline: true
		});

	const tabbar = new Tabbar({ props: { location: 1 }, $$inline: true });

	const block = {
		c: function create() {
			t0 = space();
			create_component(navbar.$$.fragment);
			t1 = space();
			div = element("div");
			create_component(storesection0.$$.fragment);
			t2 = space();
			create_component(storesection1.$$.fragment);
			t3 = space();
			create_component(storesection2.$$.fragment);
			t4 = space();
			create_component(tabbar.$$.fragment);
			this.h();
		},
		l: function claim(nodes) {
			const head_nodes = query_selector_all("[data-svelte=\"svelte-160duyq\"]", document.head);
			head_nodes.forEach(detach_dev);
			t0 = claim_space(nodes);
			claim_component(navbar.$$.fragment, nodes);
			t1 = claim_space(nodes);
			div = claim_element(nodes, "DIV", { id: true, class: true });
			var div_nodes = children(div);
			claim_component(storesection0.$$.fragment, div_nodes);
			t2 = claim_space(div_nodes);
			claim_component(storesection1.$$.fragment, div_nodes);
			t3 = claim_space(div_nodes);
			claim_component(storesection2.$$.fragment, div_nodes);
			div_nodes.forEach(detach_dev);
			t4 = claim_space(nodes);
			claim_component(tabbar.$$.fragment, nodes);
			this.h();
		},
		h: function hydrate() {
			document.title = "Store :: Steam Mobile";
			attr_dev(div, "id", "store");
			attr_dev(div, "class", "svelte-1s5ozd4");
			add_location(div, file$5, 11, 0, 279);
		},
		m: function mount(target, anchor) {
			insert_dev(target, t0, anchor);
			mount_component(navbar, target, anchor);
			insert_dev(target, t1, anchor);
			insert_dev(target, div, anchor);
			mount_component(storesection0, div, null);
			append_dev(div, t2);
			mount_component(storesection1, div, null);
			append_dev(div, t3);
			mount_component(storesection2, div, null);
			insert_dev(target, t4, anchor);
			mount_component(tabbar, target, anchor);
			current = true;
		},
		p: noop,
		i: function intro(local) {
			if (current) return;
			transition_in(navbar.$$.fragment, local);
			transition_in(storesection0.$$.fragment, local);
			transition_in(storesection1.$$.fragment, local);
			transition_in(storesection2.$$.fragment, local);
			transition_in(tabbar.$$.fragment, local);
			current = true;
		},
		o: function outro(local) {
			transition_out(navbar.$$.fragment, local);
			transition_out(storesection0.$$.fragment, local);
			transition_out(storesection1.$$.fragment, local);
			transition_out(storesection2.$$.fragment, local);
			transition_out(tabbar.$$.fragment, local);
			current = false;
		},
		d: function destroy(detaching) {
			if (detaching) detach_dev(t0);
			destroy_component(navbar, detaching);
			if (detaching) detach_dev(t1);
			if (detaching) detach_dev(div);
			destroy_component(storesection0);
			destroy_component(storesection1);
			destroy_component(storesection2);
			if (detaching) detach_dev(t4);
			destroy_component(tabbar, detaching);
		}
	};

	dispatch_dev("SvelteRegisterBlock", {
		block,
		id: create_fragment$5.name,
		type: "component",
		source: "",
		ctx
	});

	return block;
}

function instance$5($$self, $$props, $$invalidate) {
	const writable_props = [];

	Object.keys($$props).forEach(key => {
		if (!~writable_props.indexOf(key) && key.slice(0, 2) !== "$$") console.warn(`<Store> was created with unknown prop '${key}'`);
	});

	let { $$slots = {}, $$scope } = $$props;
	validate_slots("Store", $$slots, []);
	$$self.$capture_state = () => ({ Navbar, Tabbar, StoreSection });
	return [];
}

class Store extends SvelteComponentDev {
	constructor(options) {
		super(options);
		init(this, options, instance$5, create_fragment$5, safe_not_equal, {});

		dispatch_dev("SvelteRegisterComponent", {
			component: this,
			tagName: "Store",
			options,
			id: create_fragment$5.name
		});
	}
}

export default Store;
//# sourceMappingURL=data:application/json;charset=utf-8;base64,
